#!/bin/sh
#
# This script is often softlinked just outside the snapcpp directory:
#
#      git clone --recursive https://github.com/m2osw/snapcpp
#      snapcpp/bin/snap-ubuntu-packages
#      snapcpp/bin/build-snap
#      ln -s snapcpp/snapwebsites/snapbase/script/start .
#      ln -s snapcpp/snapwebsites/snapbase/script/stop .
#      ./start
#
# Once done, in another console you do:
#
#      ./stop
#
# To stop everything, however, the while loop at the end of this script
# will go on forever...
#


QUIET=false
HERE=`pwd`

# Add the snapupgrader for snapmanagerdaemon to find the compiled one on
# a programmer's system
#
PATH=${HERE}/BUILD/snapwebsites/snapmanagercgi/upgrader:${PATH}

while ! test -z "$1"
do
	OPTION="$1"
	shift
	case "$OPTION" in
	"--help")
		echo "Usage: $0 [--quiet]"
		echo "where --quiet is used to send the output to /dev/null"
		echo "useful to avoid the heavy output and to debug this script"
		exit 1
		;;

	"--quiet")
		QUIET=true
		;;

	"*")
		echo "error: unknown command line option $1"
		exit 1
		;;

	esac
done

mkdir -p ${HERE}/tmp

# A couple of things I need to setup each time I restart everything
# It has to be done first
#
echo "---------------- setup processes"
/home/snapwebsites/snapcpp/snapwebsites/snapcgi/scripts/setup-snapcgi
sudo /home/snapwebsites/snapcpp/snapwebsites/snapmanager/scripts/setup-daemon

# Daemons can now be started in any order and to prove it we randomize
# the starting of them...
#
DAEMON1="BUILD/snapwebsites/snapcommunicator/src/snapcommunicator"
DAEMON2="BUILD/snapwebsites/snaplog/src/snaplog"
DAEMON3="BUILD/snapwebsites/snaplock/src/snaplock"
DAEMON4="BUILD/snapwebsites/snapdbproxy/src/snapdbproxy"
DAEMON5="BUILD/snapwebsites/snapfirewall/src/snapfirewall"
DAEMON6="BUILD/snapwebsites/snapserver/src/snapserver"
DAEMON7="BUILD/snapwebsites/snapbackend/src/snapbackend --cron-action images::images"
DAEMON8="BUILD/snapwebsites/snapbackend/src/snapbackend --cron-action list::listjournal"
DAEMON9="BUILD/snapwebsites/snapbackend/src/snapbackend --cron-action list::pagelist"
DAEMON10="BUILD/snapwebsites/snapbackend/src/snapbackend --cron-action sendmail::sendmail --param GLOBAL_LOCK=1"
DAEMON11="BUILD/snapwebsites/snapmanager/daemon/snapmanagerdaemon"
DAEMON12="BUILD/snapwebsites/snapwatchdog/src/snapwatchdogserver"
DAEMON13="BUILD/snapwebsites/snaplistd/src/snaplistd"

ORDER=`seq 1 13 | shuf`
PAUSE=`seq 1 20 | shuf | awk 'NR==1 {print; exit}'`

echo "---------------- start daemons"
for idx in $ORDER
do
	# Dynamic variable selection in Bourne Shell (and others)
	#
	VARNAME=DAEMON${idx}
	cmd=`eval echo \\\$\${VARNAME}`

	if test -n "$cmd"
	then
		# Now start the command
		#
		echo $cmd
		if $QUIET
		then
			$cmd >/dev/null 2>&1 &
		else
			$cmd &
		fi
		PID=$!

		BASENAME=`echo $cmd | grep :: | sed -e 's/.* [a-z]\+::\([a-z]\+\).*/\1/'`
		if test -z "$BASENAME"
		then
			BASENAME=`basename $cmd`
		fi
		echo $PID >${HERE}/tmp/${BASENAME}.pid

		# add one random pause to further prove that it does not need to
		# all sort exactly at the same time
		#
		if test $idx -eq $PAUSE
		then
			sleep 1
		fi
	fi
done



# For the CRON task, run it once in a while...
#
# TODO: find a way to exit if all the other processes exit...
#       (i.e. once we have the PID of snapcommunicator from its .pid file,
#       we can sleep 1 second, use `if kill --pid $PID 0 ...` and if true
#       we can sleep some more, if false it is dead, exit immediately.)
#
echo "---------------- start backend once every 5 min."
while true
do
	n=1
	while [ $n -le 300 ]
	do
		RUNNING=false
		for idx in $ORDER
		do
			VARNAME=DAEMON${idx}
			cmd=`eval echo \\\$\${VARNAME}`
			# In case you comment out one daemon for test purposes
			# this would break
			if test -n "$cmd"
			then
				BASENAME=`echo $cmd | grep :: | sed -e 's/.* [a-z]\+::\([a-z]\+\).*/\1/'`
				if test -z "$BASENAME"
				then
					BASENAME=`basename $cmd`
				fi
				if test -f ${HERE}/tmp/${BASENAME}.pid
				then
					# at least one daemon is considered to be
					# running (the stop script deletes these
					# files)
					#
					RUNNING=true
					break
				fi
			fi
		done

		if ! $RUNNING
		then
			# none of the daemons are running, exit now
			#
			echo "All daemons are gone, exiting."
			exit 0
		fi

		sleep 1

		n=`expr $n + 1`
	done

	# Run this one blocking to avoid having two instances running
	# simultaneously
	#
	BUILD/snapwebsites/snapbackend/src/snapbackend
done
# NOT_REACHED
