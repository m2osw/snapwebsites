snapwebsites (1.8.5.0~xenial) xenial; urgency=high

  * Added the snaplogger and cppthread as dependencies (for snapdatabase).
  * Added the snapdatabase project to handle journals.
  * Applied a fix to the snaplistd which would not properly reply when an
    error occurred. This may fix the problems we see where once in a while
    the list mechanism breaks.
  * Fixed a few assignments that were missing the '&'.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 04 Feb 2021 16:21:12 -0800

snapwebsites (1.8.4.0~xenial) xenial; urgency=high

  * Added the `watch-freq` script (useful on newer processors).
  * Removed the `snapbootinit` script from `/usr/bin`.
  * SNAP-714: Fixed the Cassandra bundle to use OpenSDK v8.
  * Made snapmanagercgi a dependency of snapmanagerdaemon.
  * SNAP-713: Add long history (see /etc/profile.d/snap-profile.sh).
  * SNAP-706: Command prompt warns about entering /etc/snapwebsites.
  * Updates to match the new advgetopt exceptions.
  * Fixed a for() loop with a missing "auto".
  * Various corrections (spelling, etc.).

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 24 Oct 2019 09:14:46 -0700

snapwebsites (1.8.3.0~xenial) xenial; urgency=high

  * SNAP-478: Fixed the count of indexes so the pagers wake up.

 -- Alexis Wilke <alexis@m2osw.com>  Sun,  6 Oct 2019 20:53:23 -0700

snapwebsites (1.8.2.0~xenial) xenial; urgency=high

  * SNAP-698: Removing the DELETE since the incremental function does not
    keep track of whether a certain table was cleaned up already or not.

 -- Alexis Wilke <alexis@m2osw.com>  Fri,  4 Oct 2019 21:19:40 -0700

snapwebsites (1.8.1.0~xenial) xenial; urgency=high

  * SNAP-698: Applied a fix to the reindex so it runs incrementally and we
    can then finish the work on a large server.
  * Changed the RestartSec to 5 sec so it restart fast if needed.

 -- Alexis Wilke <alexis@m2osw.com>  Thu,  3 Oct 2019 03:23:07 -0700

snapwebsites (1.8.0.0~xenial) xenial; urgency=high

  * Also enable the snap-apache2-extra-options.
  * Added default ServerName (http://127.0.0.1:80) to avoid the Apache warning.
  * Bump version to 1.8 just before doing an official release.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 24 Sep 2019 23:23:29 -0700

snapwebsites (1.7.22.0~xenial) xenial; urgency=high

  * Changed the snapmanager-dpkg-update hook to ignore all errors.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 24 Sep 2019 17:34:53 -0700

snapwebsites (1.7.21.0~xenial) xenial; urgency=high

  * Fixed the users token VERIFIED ON would improperly use LOCALES.
  * Added support for users::username.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 15 Aug 2019 15:15:15 -0700

snapwebsites (1.7.20.0~xenial) xenial; urgency=high

  * Fixed the gathering of the signal_secret parameter in the self plugin.

 -- Alexis Wilke <alexis@m2osw.com>  Sat,  7 Sep 2019 11:24:58 -0700

snapwebsites (1.7.19.0~xenial) xenial; urgency=high

  * Updated a couple of files to work with the new addr exceptions.

 -- Alexis Wilke <alexis@m2osw.com>  Tue,  3 Sep 2019 02:18:56 -0700

snapwebsites (1.7.18.0~xenial) xenial; urgency=high

  * Use shredlog to delete secure logs and the snapmanager.conf files.
  * Comment out the `shred` option in the logrotate, with SSD it's useless.
  * Removed warning about non-locked log file, it is locked now.
  * Made snaplogger a dependency of snapbase (to have `shredlog`).

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 24 Aug 2019 02:56:17 -0700

snapwebsites (1.7.17.0~xenial) xenial; urgency=high

  * Fixed the locale so it finds the libraries (i.e. correct namespace).

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 13 Aug 2019 01:57:40 -0700

snapwebsites (1.7.16.1~xenial) xenial; urgency=high

  * Changed the __TIME__ and __DATE__ with our UTC_BUILD_TIME/DATE vars.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 11 Jul 2019 03:38:20 -0700

snapwebsites (1.7.16.0~xenial) xenial; urgency=high

  * Fixed the end of the server option list.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 10 Jul 2019 17:09:24 -0700

snapwebsites (1.7.15.0~xenial) xenial; urgency=high

  * Added libutf8 as a new dependency.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 10 Jul 2019 00:39:16 -0700

snapwebsites (1.7.14.0~xenial) xenial; urgency=high

  * Removed the headers I moved to snapdev earlier.
  * Clean up some comments that were just old code.
  * Removed a few fprintf() we still had left in a couple of tests.
  * Applied a fix to get the ICU to work on 19.04.
  * Fixed various OpenSSL calls (deprecated, ignored parameters, etc.)
  * Added #include <vector> in various files.
  * Made many fallthrough C++17 compatible.
  * It looks like g++ 8.x wants explicit noexcept.
  * The ICU library requires a namespace in g++ 8.x.
  * Removed the YAML_CPP_INCLUDE_DIR because for now it's wrong on 19.04.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 18 Jul 2019 02:14:58 -0700

snapwebsites (1.7.13.0~xenial) xenial; urgency=high

  * Added snapdev dependency for build to work.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 18 Jul 2019 02:14:58 -0700

snapwebsites (1.7.12.0~xenial) xenial; urgency=high

  * Updated the command line tools to compile against the new advgetopt.
  * Added in=C++ to the MAPPING_EXTENSION to all doxy files.
  * Added the PROJECT_BRIEF description in some doxy files.
  * Updated all doxy files to 1.8.11.
  * Added options to the debian/source to avoid including tmp & .git in the
    source package.
  * Make use of the UTC_BUILD_YEAR for our copyright notices.
  * Added a README.md for the library mb tests.
  * Added a test to verify whether the snap_thread FIFO should be implemented
    with a vector or a queue. The queue wins big time.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 13 May 2019 11:52:19 -0700

snapwebsites (1.7.11.0~xenial) xenial; urgency=high

  * Added an enumeration function to enumarate the children of a page and
    call a callback function. The function ensures that the pages are NORMAL.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 12 May 2019 15:03:52 -0700

snapwebsites (1.7.10.0~xenial) xenial; urgency=high

  * When removing the `list::type` link from a page, the list plugin
    automatically deletes all the list related fields, including the
    ordered list.
  * Changed a `return` in a `continue` in the `links::delete_link()` function.

 -- Alexis Wilke <alexis@m2osw.com>  Sun,  5 May 2019 02:48:17 -0700

snapwebsites (1.7.9.0~xenial) xenial; urgency=high

  * Added support for a pool of threads and workers.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 23 Apr 2019 23:36:44 -0700

snapwebsites (1.7.8.0~xenial) xenial; urgency=high

  * SNAP-684: Added the snapclusterstatus command line tool.
  * SNAP-684: Included a man.1 page for snapclusterstatus.
  * SNAP-684: Made snapcommunicator save the snap-cluster.txt file with its
    most current status.
  * SNAP-684: Fixed a bug in a one computer environment the cluster status
    was not set until we receive a very first CLUSTERSTATUS message.
  * EX-204: Fixed the path used to check the field, was using wrong variable.
  * EX-204: Made the upload reset button appear only if a flag is turned on.
  * In the snapmanagercgi output, fixed the page title so it includes the
    host name.
  * Fixed the double "(Select Host)" message from the status.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 21 Apr 2019 00:14:19 -0700

snapwebsites (1.7.7.0~xenial) xenial; urgency=high

  * SNAP-181: Applied a fix as the whitelist would not update automatically,
    we have to save the value in the config (because it's static memory.)
  * SNAP-181: Fixed the `signal_secret` which would also not get updated.
  * SNAP-350: Fixed list of supported message in snaplock, the CLUSTERUP
    and CLUSTERDOWN had to be included.
  * SNAP-478: Fixed the type for result for a DELETE in the index plugin.
  * SNAP-478: Fixed the index case, when indexing the key may change, to
    avoid duplicates, we must delete existing entries that do not match
    the new 'column1' value.
  * Fixed the menu, do not show Host Watchdog when no host is selected.

 -- Alexis Wilke <alexis@m2osw.com>  Fri, 19 Apr 2019 20:30:20 -0700

snapwebsites (1.7.6.0~xenial) xenial; urgency=high

  * SNAP-181: added a field to edit the "whitelist" variable from iplock.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 17 Apr 2019 00:00:20 -0700

snapwebsites (1.7.5.0~xenial) xenial; urgency=high

  * SNAP-526: added a field in snapmanager to edit the `signal_secret` field.
  * SNAP-478: added the index plugin to the packages.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 15 Apr 2019 21:56:32 -0700

snapwebsites (1.7.4.0~xenial) xenial; urgency=high

  * SNAP-413 and SNAP-421 and SNAP-454: Moved the snapcreatecontext
    functionality to snapdbproxy.
  * SNAP-413: Moved the snapcreatetables functionality to snapdbproxy.
  * SNAP-413: Fixed the NEWTABLE implementation.
  * SNAP-267: Added an XSD to verify tables.xml files and updated the
    CMakeLists.txt.
  * SNAP-478: implemented the index plugin to have instant "lists".
  * SNAP-478: added a link() function in snap_expr, useful for indexes.
  * SNAP-679: added a "temporary" fix to the fail2ban nice value.
  * SNAP-492: implemented the support for a PID file for snapserver,
    snabackend, snacommunicator, and snapwatchdog (so far.)
  * SNAP-641: Started work on a fix to not leak messages to the wrong user.
  * SNAP-526: added the ability to add a secret code in a UDP message to
    make them a little more secure.
  * Changed the sendmail algorithm to allow for ignoring the fact that the
    user's email address failed with a bounce before if the user is an admin.
  * When marking a session as used up, save the date when the event happened.
  * Install the unblock-ip script even though it's not very useful as it stands.
  * Converted the snapcommunicator address test to make use of addr::addr
    (the domain name includes the port!)
  * Added a script one can use to search for users who have a bounced email.
  * Add the address to the addrinfo_t unique_ptr<>() because it could be that
    we had an error (r != 0) and a pointer (addrinfo != null).
  * Verify buffer length in get_client_addr().
  * Added support for keepalive in the client BIO.
  * Properly initialize a variable in case BIO_get_fd() fails.
  * Applied a fix to the snapmanager so it does not crash if the name of the
    host specified on the query string is unknown.
  * Fixed the cassandra plugin, if the "listen_address" is not defined it
    would _crash_ when trying to get the parameter when it's not defined.
  * Applied a fix to the snapstop making the `--service` parameter optional.
    (The `--service "$MAINPID"` becomes `--service` when $MAINPID is empty.)
  * Added /etc/vim/vimrc.local so we get our search, line numbers, etc.
  * Made the attach/detach session RAII so it at least happens on exceptions.
  * Added function to create a complete page in one call. (editor create_page)
  * Fixed the f_cassandra_connect_timer_index calculation.
  * Made the type found by find_type_with() available through another call.
  * Fixed the default watchdog plugins list, "package" was wrong, "s" missing.
  * Applied a fix to the message box, it adds a scrollbar when many messages
    appear in the list.
  * Fixed HUGE bug in content::modified_content_impl() where I would return
    false if the snap_child object was ready. That test was inverted!
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 05 Mar 2019 10:49:22 -0700

snapwebsites (1.7.3.0~xenial) xenial; urgency=high

  * Remove reference to /run/snapwebsites from snapbuild.service.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 27 Oct 2018 11:37:48 -0700

snapwebsites (1.7.2.0~xenial) xenial; urgency=high

  * Make use of snapbase.tmpfile to create the /run/snapwebsites folder.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 25 Oct 2018 09:47:04 -0700

snapwebsites (1.7.1.0~xenial) xenial; urgency=high

  * Previous throwing when a plugin version is not correct.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 24 Oct 2018 01:34:18 -0700

snapwebsites (1.7.0.0~xenial) xenial; urgency=high

  * Create a new official version, this is much more stable than 1.6.
  * Added a test against w00tw00t scanners (block IPs).

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 22 Oct 2018 15:33:39 -0700

snapwebsites (1.6.21.0~xenial) xenial; urgency=high

  * Actually install the snap-named-refused.conf file in our CMakeLists.txt.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 20 Oct 2018 21:49:40 -0700

snapwebsites (1.6.20.0~xenial) xenial; urgency=high

  * Enabled the [named-resufed] jail now that SNAP-483 is complete.
  * Added a restart of bind9 to the DNS bundle.
  * Delete the bind9 logs on uninstallation.
  * We got some logs on one of our server so I could test the fail2ban
    named-refused.conf and it does not work as is. Here is a version that
    works (snap-named-refused.conf) and the necessary [un]install script.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 20 Oct 2018 16:07:59 -0700

snapwebsites (1.6.19.0~xenial) xenial; urgency=high

  * Updated the snapwatchdog server to use larger span times to send emails
    (changed from 15min, 1h, 1d, to 1d, 3d, 1w)
  * Made these spans and corresponding priorities editable (in conf file).
  * Applied a fix to the snap_communicator permanent connection thread, now we
    have to call the stop() function, no matter what.
  * Reviewed the rest of the snap_thread usage and it all looks good, except
    in snapmanagerdaemon where I put a TODO note.
  * Enhanced the dns_options tool to support adding acl bogusnets and logging
    options even when not defined at all in the options file.
  * Properly handle the case where multiple levels are missing on a CREATE.
  * Fixed some tabulations although there are still problems.
  * SNAP-553: Added the ACL DNS options in the DNS bundle.
  * SNAP-483: Added the log DNS options in the DNS bundle.
  * Added some missing std::endl in various messages.
  * Fixed the reading of the value of the expression on the command line, the
    get_token() needed to use `false` in that case.
  * Use more variables in the DNS bundle.
  * Added a test to verify all the dns_options we have in our bundle.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 17 Oct 2018 20:59:22 -0700

snapwebsites (1.6.18.0~xenial) xenial; urgency=high

  * Block IP address if user attempts to go to "wp-login.php" or
    "GponForm/diag_Form?images".
  * Updated the editor.js so we do not attempt to save if a file is being
    processed (i.e. our file drop areas immediately send the file to the
    server and attempting to Save to see would generate a "weird" error
    saying that the file is missing.)

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 17 Oct 2018 17:14:31 -0700

snapwebsites (1.6.17.0~xenial) xenial; urgency=high

  * Moved the RAII lock object from finball to snap.
  * Use the RAII lock to increase the lock obtention when the content plugin
    tries to add an attachment, in case the file is being worked on.
  * Fixed the snaplog no_mysql() function to actually explicitly close the
    database (in case it was still open, to avoid "infinite" logs)
  * Added a catch() of the "failed lock" so we can die() with a 423 error
    (locked) instead of the default/usual not talkative 500 error.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 13 Oct 2018 23:02:55 -0700

snapwebsites (1.6.16.0~xenial) xenial; urgency=high

  * SNAP-663: the start() and stop() functions needed work to properly support
    the joining of our threads. They were not being joined so each time we
    would lose a lot of RAM and that's what I noticed in SNAP-663.
  * snap_thread: Fixed the start() function, when the pthread_create() fails,
    we must reset f_running back to false before returning.
  * libdbproxy: Show result and what was expected in a couple of errors.
  * log: Added support to log pointers.
  * tcp client/server: fixed the plain mode, deleter was not specified for
    the listen BIO object so delete would be used against a BIO object.
  * tcp client/server: added a couple of functions to ensure proper clean up
    of BIO objects. One to call when quitting a thread.
  * snapdbproxy: call tcp_client_server::cleanup() on exit.
  * start: added a test on $cmd so one can comment a command to avoid starting
    it from the start script.
  * snapdbproxy: check the ANEW flag when locked because if present we clear
    the g_cluster_description pointer which is a global!

 -- Alexis Wilke <alexis@m2osw.com>  Tue,  2 Oct 2018 23:13:32 -0700

snapwebsites (1.6.15.0~xenial) xenial; urgency=high

  * Finished up an implementation of dns_options that is enough for SNAP-522.
  * Install dns_options.
  * Run dns_options when installing the DNS bundle.
  * Changed the use of the keywords and use shared pointers so we can have a
    parent (although I ended up not using the parent.)
  * Implemented the match() function.

 -- Alexis Wilke <alexis@m2osw.com>  Fri, 28 Sep 2018 20:54:20 -0700

snapwebsites (1.6.14.0~xenial) xenial; urgency=high

  * Applied a fix so the lock_connection object gets released: i.e. the
    dispatcher needed to use a weak pointer in case it's to itself.
  * Fixed the test which ensures at least 3 computers for leadership when
    the cluster is 3 or more computers.
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Fri, 28 Sep 2018 11:38:59 -0700

snapwebsites (1.6.13.0~xenial) xenial; urgency=high

  * Added debug logs when TICKETADDED fails so we know why.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 27 Sep 2018 22:43:20 -0700

snapwebsites (1.6.12.0~xenial) xenial; urgency=high

  * Somehow it looks like at times the LOCKSTARTED message is not received.
    I added an instanced sent from is_ready() when a leader is missing.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 27 Sep 2018 17:38:14 -0700

snapwebsites (1.6.11.0~xenial) xenial; urgency=high

  * Fixed the handling of the LOCKLEADERS message: we must create new computers
    for missing leader(s) if such happens.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 27 Sep 2018 15:40:34 -0700

snapwebsites (1.6.10.0~xenial) xenial; urgency=high

  * Added logs to better understand why is_ready() returns false.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 27 Sep 2018 14:28:26 -0700

snapwebsites (1.6.9.0~xenial) xenial; urgency=high

  * Fixed the set_command() in CLUSTERSTATUS replies.
  * Changed "debug_lock_messages" with "debug_all_messages" in snapcommunicator.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 27 Sep 2018 09:25:42 -0700

snapwebsites (1.6.8.0~xenial) xenial; urgency=high

  * Initialize start time in the constructor.
  * Set our start time in our constructor.
  * Immediately set the start time of new computers.
  * Moved the `if(set_my_leaders)` outside of the loop.
  * Added functions to access the is_locked() and lock_timedout() functions.
  * Removed the get_obtention_timeout_date() function since it wasn't used
    (and once we returned it's useless since we obtained the lock.)

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 26 Sep 2018 22:08:13 -0700

snapwebsites (1.6.7.0~xenial) xenial; urgency=high

  * Fixed the CLUSTERUP/DOWN/[IN]COMPLETE neighbors_count so it gets reset
    when the count changes, which allows adding/removing neighbors dynamically.
  * Fixed updating the f_cluster_status as it can't be done when
    reply_connection is not a null pointer.
  * Added a start time to each snaplock so a LOCKSTARTED tells us whether this
    is a new snaplock or not (i.e. if we know that snaplock but its start time
    changed then it was restarted so it's considered new.)
  * Made the snaplock is_ready() function return false is the quorum changes
    and the results is that the election would not have occurred.
  * Force service name for LISTTICKETS to be "snaplock".

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 26 Sep 2018 20:34:45 -0700

snapwebsites (1.6.6.1~xenial) xenial; urgency=high

  * Fixed the list of include path so the snaplock manager plugin compiles.
  * Actually install the lock manager plugin in the snaplock package.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 26 Sep 2018 13:13:34 -0700

snapwebsites (1.6.6.0~xenial) xenial; urgency=high

  * Implemented the snapmanager.cgi lock tab.
  * Replaced a QStringList with snap::snap_string_list.
  * Fixed the default priority to 14 (I still had 15 in snaplock.)
  * Put a default priority in lock tab (14) instead of "".

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 26 Sep 2018 10:46:27 -0700

snapwebsites (1.6.5.0~xenial) xenial; urgency=high

  * Fixed snapcommunicator so self is always included in the count.
  * Move the flags out of the watchdog sub-directory since it may not be there.
  * Fixed the flags.cpp, removing the "watchdog" part since now it is in the
    library. Updated the rest of the code accordingly.
  * Moved the flag_path to the snapserver.conf file.
  * On a purge, attempt deleting the snapwebsites.d sub-directory.
  * Fixed the msg_help() as 'this' may represent a dispatcher_base directly.
  * Throw an error if the dispatcher can't find any command.
  * Raise a flag if you add a neighbor which is a loopback address.
  * Fixed the snaplock elections so they still work when we have less than
    three computers.
  * Fixed the usage of --debug-lock-messages in snaplock.
  * Mark ourselves as connected otherwise the election doesn't pick up.
  * Generate an error if the cluster is 3 or less computers and one or more
    is turned off.
  * Added a lock manager plugin to set up the candidate priority.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 25 Sep 2018 16:03:31 -0700

snapwebsites (1.6.4.0~xenial) xenial; urgency=high

  * Removed a warning that would always happen and is not necessary.
  * Moved the lock_connection class in a 'details' namespace.
  * Created a lock_connection::run() function so we can call share_from_this().

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 24 Sep 2018 19:12:38 -0700

snapwebsites (1.6.3.0~xenial) xenial; urgency=high

  * SNAP-392: change our thread to Joinable instead of Detach.
  * SNAP-519: found out that the snapmanagerdaemon was not initializing the
    QCoreApplication so it could crash in the thread (albeit really rare.)
  * SNAP-661: move flags.cpp/h to libsnapwebsites so raising flags can happen
    from nearly anywhere.
  * SNAP-661: moved the raise_flag.cpp tool to libsnapwebsites/tools.
  * Moved 3 tools from snapserver to libsnapwebsites where they were supposed
    to be (there are there more to debug the library than really useful tools.)
  * SNAP-660: snapcommunicator tries to connect to any IP even invalid once,
    now we flag those that fail to connect for too long or too many times.
  * SNAP-350: added support for CLUSTERSTATUS, CLUSTERUP, CLUSTERDOWN,
    CLUSTERCOMPLETE and CLUSTERINCOMPLETE to snapcommunicator.
  * SNAP-350: replace LOCKREADY message with LOCKSTARTED so we can use the
    LOCKREADY to answer a LOCKSTATUS request (like CASSANDRAREADY, etc.)
  * SNAP-350: added a LOCKSTATUS, LOCKREADY, NOLOCK set of messages. This
    was a bonus because of the CLUSTERUP and CLUSTERDOWN messages from the
    snapmanager. We don't internally use those, but they will be used by
    other daemons (snapserver/snapbackend).
  * SNAP-533: change the LOCKSTARTUP (was LOCKREADY) to start the election
    process by counting the number of computers connected and use the CLUSTERUP
    total number of computers to know we attained a QUORUM of computers.
  * SNAP-350: added the LOCKLEADERS to complete an election by informing the
    others that the election was done and inform them of the leaders. New
    connections get a LOCKSTARTUP with the leader information.
  * SNAP-659: detect when a snaplock connection dies and act on it by
    conducting new elections and sharing the status of the locks with the
    new leader (LOCK and LOCKTICKETS messages are used.)
  * SNAP-533: prevent locks from starting until QUORUM is reached.
  * SNAP-471: the new implementation clearly uses 3 leaders and sends messages
    with a key which is unique so overlap cannot happen.
  * SNAP-343: locks now timeout as expected, snaplock sends an UNLOCKED at
    the time of the timeout (and wait for acknowledgment with an UNLOCK.)
  * SNAP-536: fixed the path to the snapserver-core-plugins documentation.
  * Fixed the source/destination of a few *-doc.install definitions.
  * Moved the additional libsnapwebsites docs to the libsnapwebsites directory
    instead of snapwebsites.
  * In threads, log a fatal error in case a thread throws an unknown exception.
  * Raise a flag in snap_child if the fork() happens with more than one thread.
  * Updated the debian/*docs for projects that have their own README.txt/md.
  * Added the necessary to temporarily change the logged log_level_t.
  * Reduce logs from snapwatchdog by raising log level to WARNING while running
    the plugins to reduce the logs by probably 10Mb or so...
  * Removed the unused `context` from a snap_backend connection.
  * Fixed the two glob_dir() to avoid empty directory errors in snapmanager.cgi
  * Reduced the number of database access of freshclam on installation.
  * Moved the snaplock code inside the snaplock namespace.
  * Swapped the order in which the "HELP" and "READY" messages are sent by
    the snapcommunicator as we want to get the "COMMANDS" back before any
    other messages (communication could otherwise fail.)
  * Updated any handling of the "HELP" or "READY" to take the new order in
    account (i.e. if things were started in "HELP" moved them to "READY".)
  * Added a function to determine the maximum pid_t that getpid() will return.
  * Added a way to read messages in a blocking snap communicator connection
    in between messages (needs more testing, though.) This can be useful for
    locks that last a long time.
  * Added an ALIVE -> ABSOLUTELY set of message as a watchdog that works with
    any daemon that implements the dispatcher.
  * Changed the dispatcher match() functions so they can return CALLBACK
    which means we can add a callback within our dispatcher tables.
  * Enhanced message of header of configuration files, including date too.
  * Implemented the dispatcher in snap_lock.cpp.
  * Added an unlock duration as UNLOCKED needs acknowledgment when due to a
    timeout.
  * Fixed the snapcommunicator count_live_connections().
  * In some cases a server name was needed in snapcommunicator and not added,
    now it will be so messages go straight to the correct server.
  * Fixed many lock failure error handling. We send more LOCKFAILED and
    snaplock daemons understand and can forward a LOCKFAILED to the service
    asking for a lock.
  * Removed the max_pending_connections in snaplock since it wasn't used.
  * Added a SIGPIPE handler to (1) ignore the signal and (2) log the event.
  * Added USR1 and USR2 in snaplock to get some info without stopping snaplock.
  * Fixed the log properties by adding a lock for all.log.
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 08 Sep 2018 08:43:27 -0700

snapwebsites (1.6.2.0~xenial) xenial; urgency=high

  * Added the ability to prevent saving the snapwatchdog data to the Cassandra
    database to avoid possible slowness (maybe not so bad in terms of writes,
    but large number of TTL/tombstones handling can be slow from my experience)
  * Added the version, hostname, and count to the flags.
  * The flag now returns an error if the unlink() fails (permissions usually).

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 05 Sep 2018 09:46:54 -0700

snapwebsites (1.6.1.0~xenial) xenial; urgency=high

  * Made progress on the DNS options implementation, it compiles and runs
    the basic parser.
  * SNAP-54: because of SNAP-416 removed the plugin version test from debug
    versions for now.
  * In snapcommunicator, replace the is_enabled() with !is_connected() when
    we receive a GOSSIP and may need to restart a remote connection. Also
    fix the timeout delay back to 1 min.
  * Use the get_remote_address() instead of get_client_addr(). We ALWAYS need
    to use the remote (peer) address and not our own address.
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 03 Sep 2018 13:55:57 -0700

snapwebsites (1.6.0.0~xenial) xenial; urgency=high

  * SNAP-657: Added an exception to avoid the 400 Bad Request on reboot.
  * SNAP-273: snapcommunicator would not properly re-enable the permanent
    connections used to connect with remove snapcommunicators when (1) it
    would receive a DISCONNECT message or (2) when it would receive a
    GOSSIP message (which was expected to restart the connection immediately)
  * Clear the possible '\r' at the end of messages in snap communicator.
  * SNAP-109: added a "packages" watchdog to check required, unwanted, and
    conflicting packages.
  * Added packages with the headers of the snapwatchdog library and plugins.
  * Added many .docs so docs get added to most of our packages.
  * Applied a fix to the snapbase script clearing the cache of old files
    so we do not get errors when the cache directory is empty.
  * Send a STOP message to snapmanagerdaemon in ./stop so it works.
  * Added my couple of commands to set up my developer environment in ./start.
  * Edited those scripts to use full paths.
  * Changed log level input in a select.
  * Enhanced the help of the check of snapcommunicator connections.
  * Added a function to get a path to the snapwatchdog path.
  * Added "flags" and "packages" as default watchdog plugins.
  * Fixed the default processes folder, it's /usr/share, not /var/lib.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 01 Sep 2018 19:47:44 -0700

snapwebsites (1.5.158.0~xenial) xenial; urgency=high

  * Adding the list of our non-secure issues to the snapbase package.
  * SNAP-54: Removed the test of the patch.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 01 Sep 2018 04:24:53 -0700

snapwebsites (1.5.157.0~xenial) xenial; urgency=high

  * Fixed a couple of lists in the editor (admin/drafts and admin/trashcan).
  * SNAP-282: Removed the feed/settings-form.xml file, it was not used.
  * SNAP-282: Removed the shorturl/settings-form.xml file, it was not used.
  * Marked the images, layouts, js, css as no_shorturl folders.
  * Offer a clearMessages() in output,js.
  * Adding the snapbase.docs to see whether we get the INSTALL.txt added.
  * SNAP-54: Test the server version between snapwebsites and plugins.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 30 Aug 2018 21:04:26 -0700

snapwebsites (1.5.156.0~xenial) xenial; urgency=high

  * Added a data-href for the DTD of XSLT 2.0.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 29 Aug 2018 01:47:39 -0700

snapwebsites (1.5.155.0~xenial) xenial; urgency=high

  * Added the manual flag information to the Watchdog output in snapmanager.
  * Added an Action column with a link to take a flag down (although not yet
    implemented, it's there as a reminder.)
  * Fixed the matrix copy & move operators and swap function.
  * Added a matrix is_diagonal() function.
  * Made the list error about chownnm() failure more verbose.
  * Changed the secure cookie code to generate a flag instead of failing in
    a "weird way" (because the cookie doesn't get changed in the browser
    if sent secure over an HTTP connection)

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 25 Aug 2018 18:23:48 -0700

snapwebsites (1.5.154.0~xenial) xenial; urgency=high

  * Added the manual_down field to the flag support so we can mark certain
    flags as requiring administrator intervention to get turned off.
  * Flag up two more cases in the content and editor plugins.
  * Moved the snapwatchdog_lib_SOURCE_DIR specification to the top CMakeLists.
  * Force link with snapwatchdog so it works as expected.
  * Correctly save the flag up in the antivirus code, also change priorty.
  * Added the --manual to the raise-flag tool.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 24 Aug 2018 22:23:51 -0700

snapwebsites (1.5.153.1~xenial) xenial; urgency=high

  * Added the snapwatchdog_lib directory to antivirus so it can include the
    flags.h header file as expected.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 24 Aug 2018 17:12:44 -0700

snapwebsites (1.5.153.0~xenial) xenial; urgency=high

  * Added support for raising snapwatchdog Flags.
  * Implemented the antivirus flag raising, removed the TODO.
  * Create the snapwatchdog-scripts-errors.log, I created the output already.
  * Removed the creation of /var/cache/snapwebsites/snapwatchdog.
  * Added a command line tool to raise/drop flags from the command line.
  * Just completely remove the /var/libs/snapwebsites/snapwatchdog on purge.
  * Added a save() to the snap_config implementation.
  * Added some support for \n in snap_config files with "\\n"
  * Added identifiers to all entries of the snapwatchdog-data.xsl.
  * Mark the CGI maintenance field with Highlight when not in service.
  * Added some support for std::string and char const * in snap::process.
  * Added a call to `cass-stop` from the installer reboot() function.
  * Removed debug of log output files for the watchdog scripts.
  * Fixed the name of the process in find_process.cpp.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 24 Aug 2018 16:40:17 -0700

snapwebsites (1.5.152.0~xenial) xenial; urgency=high

  * Added a verbatim definition of the SHELL variable in our snapwatchdog
    defaults. Without it SHELL=/bin/false which doesn't work well.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 23 Aug 2018 13:02:27 -0700

snapwebsites (1.5.151.0~xenial) xenial; urgency=high

  * Changed the "is-enabled" test with "show -p UnitFileState" to avoid getting
    an error every minute.
  * Fixed the watchdog_watchscripts_output=... definition in snapwatchdog.conf.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 23 Aug 2018 12:53:28 -0700

snapwebsites (1.5.150.0~xenial) xenial; urgency=high

  * SNAP-439: Thinking about it, the sendmail should not use the
    "SupplementaryGroups=postdrop" because that means itself and all the
    tools that it starts would have write privileges to that directory
    and I think that's much worse than "NoNewPrivileges=false".

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 22 Aug 2018 23:56:02 -0700

snapwebsites (1.5.149.0~xenial) xenial; urgency=high

  * SNAP-439: Found that the problem with snapwatchdog sending emails was in
    link with the fact that we prevent the setgid() when starting snapwatchdog.
    I added the postdrop as a supplemental group.
  * Changed the "NoNewPrivileges" to false for the snapwatchdog service because
    our sendmail (from snapmta) requires root privileges.
  * Made snapimages, snaplistjournal use "NoNewPrivileges=true"
  * Changed snapsendmail to use "NoNewPrivileges=true" and have
    "SupplementaryGroups=postdrop", it worked for snapwatchdog
  * Made "NoNewPrivileges=false" explicity in snapinitfirewall,
    snapcommunicator, snapmanagerdaemon
  * Removed two SNAP_LOG_TRACE() from snaplog otherwise the logfile grows
    to incredible sizes (just on finball, a test system, it could reach
    64Mb!) The data goes to MySQL already, so no need for yet another dup.
  * Removed the alarm() because it would not be a good idea to leave sendmail
    processes running (i.e. us dying doesn't kill our children which pile up.)

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 22 Aug 2018 22:40:04 -0700

snapwebsites (1.5.148.0~xenial) xenial; urgency=high

  * Fixed the snapbounce command options initialization, we cannot use -P.
  * Added list of available fields to debug save_everywhere check.
  * Removed the "form=..." attribute from the <select> tag because somehow
    it just stopped working when serializing the form.
  * Added a trace message to see snapwatchdogscript stats on exit.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 22 Aug 2018 11:31:05 -0700

snapwebsites (1.5.147.1~xenial) xenial; urgency=high

  * Properly define where the watchdog script to check snapbackup/end is to
    be installed (i.e. in snapbackend, not snapbackup.)

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 22 Aug 2018 01:19:48 -0700

snapwebsites (1.5.147.0~xenial) xenial; urgency=high

  * Moved the watch_snapbackup_old_cron_script to snapbackend since that's
    where the rogue snapbackend (which was supposed to be snapbackup) was
    installed from, that's where it has to be found from.
  * Added a daily cron for snapwatchdog because the rusage files don't get
    deleted by logrotate, only emptied.
  * Removed the logrotate entry for the rusage directory.
  * Added many TRACEs for the sendmail failure to make sure I know where it
    fails.
  * Added a couple of forced writes to the watchdogscripts to see that it works.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 21 Aug 2018 20:47:21 -0700

snapwebsites (1.5.146.2~xenial) xenial; urgency=high

  * find_process was not getting added to the snapwatchdog package.
  * Fixed the name of the firewall daemon to display in output.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 21 Aug 2018 17:49:50 -0700

snapwebsites (1.5.146.1~xenial) xenial; urgency=high

  * Fixed the install() of snapcleanuplinks, removed "RUNTIME".

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 21 Aug 2018 11:20:21 -0700

snapwebsites (1.5.146.0~xenial) xenial; urgency=high

  * We don't actually want to run `snapbackend --action links::cleanuplinks`
    once a week; it is slow and it requires a URI to only run against one
    specific website, I converted the cron script in a command line for now.
  * Noticed `sendmail -f ...` being stuck on finball3 (which explains the
    lack of emails received from that system); (1) I put an alarm() so that
    way it doesn't get stuck forever; (2) I now make sure to flush the
    ostream before attempting to close the pipe.
  * Added a couple of tests in the snap_pipe implementation as it could
    otherwise attempt to use f_file with it's a null pointer.
  * Fixed the snapstop error in case kill(pid, 0) fails, it could be because
    the process is not accessible (i.e. kill() is not permitted.)
  * Worked on the dns_options implementation.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 21 Aug 2018 10:32:20 -0700

snapwebsites (1.5.145.0~xenial) xenial; urgency=high

  * Fixed bug in snapwatchdogserver, the RELOADCONFIG was not yet implemented.
  * Fixed the default path to the watchdog_starter script, the 's' was missing.
  * Fixed the test of plugin names, check before adding the introducer.
  * Fixed the watchdog process plugin test for running services and backends,
    the fact is that we know whether a backend is expected to be running or
    not and can generate an error if running when it is disabled.
  * Fixed the match() function, whether a service is expected has nothing to
    do with matching the current process (ouch!)
  * Added a sleep() to slow down the login form when an invalid password is
    entered with the hope to slow down brute force login.
  * Fixed the counting of watchdog error messages.
  * Added a loop to go through the rows and columns of the links table to drop
    entries that point to destroyed pages.
  * Added a snapconfig command line tool to read and write configuration files.
  * Added a weekly CRON script to run the links::cleanuplinks process.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 20 Aug 2018 12:33:26 -0700

snapwebsites (1.5.144.0~xenial) xenial; urgency=high

  * Check the nice value, if not between 0 and 19, generate an error.
  * Remove the snapcommunicator override.conf file on a purge.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 19 Aug 2018 17:05:16 -0700

snapwebsites (1.5.143.0~xenial) xenial; urgency=high

  * Removed the creation of the sessions directory under /var/lib/snapwebsites.
  * Properly delete the sessions data under /var/cache/www-snapwebsites.
  * Fixed the AJAX URI with a slash (i.e. "/snapmanager" instead of just
    "snapmanager".) So if the path includes a slash it still works.
  * Fixed the snapstop --service with quotes so it receives an empty parameter
    when $MAINPID is not defined and does not generate an error in that case.
  * Fixed a bug in installer.cpp, a section may already exist when we do not
    find the specified variable by the end of the file.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 19 Aug 2018 13:25:08 -0700

snapwebsites (1.5.142.0~xenial) xenial; urgency=high

  * Fixed the `systemctl disable ...` on postrm of the snapbackend with a
    `rm -f ...` which will remove the link, including one to remove the timer.
  * SNAP-532: Add line to reset the timer as required by systemd.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 19 Aug 2018 03:12:15 -0700

snapwebsites (1.5.141.0~xenial) xenial; urgency=high

  * Fixed the chownnm() return test, it had to be != 0.
  * Changed the mkdir_p() warnings in debug.
  * To avoid many try/catch I added a test of g_test_mta_results.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 19 Aug 2018 01:31:14 -0700

snapwebsites (1.5.140.0~xenial) xenial; urgency=high

  * Changed the bundle field to pointers instead of copying the whole thing.
  * Removed the one '!' in front of a package name (easy-rsa) and used the
    <conflicts> tag for the VPN client/server bundles.
  * Hide the fields if the bundles is not ready for installation (i.e. no
    need to offer the user a way to enter data when it won't be used.)
  * Changed the missing prereq or conflicts in warnings instead of errors
    because with 3rd party bundles it could happen that something is missing
    and we should not prevent other installations/removals because of such.
  * Delete the bundle status files in reset_aptcheck() to make sure that we
    get the new status after an update or installation.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 18 Aug 2018 23:02:54 -0700

snapwebsites (1.5.139.1~xenial) xenial; urgency=high

  * Fixed the bundle implementation so the status of a bundle is saved in
    a cache file and can be reloaded by snapmanager.cgi as required.
  * Found the way to define the bundle fields and not have to make all our
    fields public.
  * Fixed the check_status() function so when running snapmanager.cgi we don't
    use any of the very slow functionality.
  * Do not run the is-installed sript if we already know a package is not yet
    installed (no need and slow.)
  * Added anti-hacker code to prevent login into snapmanager.cgi after 5
    attempts (the number of attempts can be changed in the .conf file.)
  * Create a /var/cache/www-snapwebsites directory for www-data access of
    cache data and moved our sessions there. Adjust our code accordingly.
  * Added `std::string` and `char const *` to `chownnm()`.
  * Added support for `chmod()` and `chown()` to `mkdir_p()`
  * Updated several fail2ban regex to increase our chances to catch errors
    from postfix.
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 18 Aug 2018 19:25:12 -0700

snapwebsites (1.5.138.1~xenial) xenial; urgency=high

  * Added the new plugin to the .install

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 18 Aug 2018 02:14:24 -0700

snapwebsites (1.5.138.0~xenial) xenial; urgency=high

  * Fixed the installation of the watch scripts as PROGRAMS instead of FILES.
  * Added a couple of snap_validate_xml() that were missing.
  * Fixed the glob_dir() so errors of missing directory/files doesn't throw.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 18 Aug 2018 00:39:49 -0700

snapwebsites (1.5.137.0~xenial) xenial; urgency=high

  * Tweaked a few bundles with the new features.
  * Added a <suggestions> tag to offer suggestions to users.
  * Changed the snapbackend.(pre/post)rm to avoid the killing of the services.
  * Fixed a few description messages.
  * Deleted some old code which is now not used.
  * Also marked the watchdog as a required bundle.

 -- Alexis Wilke <alexis@m2osw.com>  Fri, 17 Aug 2018 22:49:57 -0700

snapwebsites (1.5.136.0~xenial) xenial; urgency=high

  * Changed the file(INSTALL ...) with configure_file(...) so it gets
    automatically updated any time the source file changes.
  * Added a <conflicts> tag for bundles.
  * Added constructors/casts to go from and to snap_string_list
    (a.k.a. QStringList) and std::vector<> of std::string or QString objects.
  * Changed the "hide" flag using an attribute on the <bundle> tag instead
    of a '!' in front of a package name (which did not make sense.)
  * Added an <expected> tag to mark bundles we hope you will always install.
  * Added <a> tag and "id", "class", "href" attributes to the html type.
  * Added an id to the <tr> of each field so we can link to them.
  * Changed the <prereq> in a list of bundle names, no script.
  * Changed the <label> content to "html" instead of plain text.
  * Added a new class named "bundle" which manages the XML bundle files,
    corresponding package status, and links (conflicts/prereqs).
  * In the form, renamed the list of options and initial value fields
    and function params.
  * Added a separate bundles plugin, that way bundles are now in a separate
    tab (separate from the "self" entries). Much cleaner!
  * Changed log level of snapwatchdog plugin to DEBUG for the entry message.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 16 Aug 2018 01:56:58 -0700

snapwebsites (1.5.135.1~xenial) xenial; urgency=high

  * Quick fix to the bundles.xsd file format.
  * Added a <prereq> tag in bundle-snaplistd.xml.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 16 Aug 2018 01:56:58 -0700

snapwebsites (1.5.135.0~xenial) xenial; urgency=high

  * Removing a few more left overs from /usr/share/snapwebsites/conf
    (since we support /etc/snapwebsites/snapwebsites.d/... it's not useful)
  * Changed the status shown of each backend service. If not selected as
    an active backend on that computer, it will be shown normally if disbaled.
  * Properly handle the case where a daemon status is "static" which we
    currently interpret as "disabled".
  * Fixed the snapbackend.postrm script, the purge if block was empty.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 16 Aug 2018 00:36:36 -0700

snapwebsites (1.5.134.0~xenial) xenial; urgency=high

  * Furhter tweaked the setup to have a single "common" folder with sub-
    directories (dtd and xsd for now) to save that information.
  * Updated the CMakeLists.txt accordingly, especially, re-added the install()
    and made the file(INSTALL ...) use the new ${SNAP_COMMON_DIR} variable.
  * Re-install the swap-usage script which was inadvertendly removed.
  * Added a few more things to dns_options.cpp.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 15 Aug 2018 21:13:27 -0700

snapwebsites (1.5.133.0~xenial) xenial; urgency=high

  * SNAP-456: Fixed the order so DTD/XSD files are found without a full path.
  * Removed all the full path for DTD/XSD validations.
  * Fixed the SnapJsLint, it could not be used more than once.
  * Fixed the SnapCssLint, it could not be used more than once.
  * Fixed the snapmanagercgi.css, removed invalid comma.
  * Fixed a few allow_duplicates=..., it can't be set to "true".
  * Fixed the extension of the nsapmanagercgi.properties file.
  * Added a few snap_clear/build_xml_targets().
  * Fixed the bundle reference in snaplistd so the correct file is checked.
  * Now check the CSS/JS files from snapmanager.
  * Cleaned up the snapmanagercgi.js from linter's output.
  * SNAP-522: started work on this issue (tweaking of DNS options.)
  * Various other clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 15 Aug 2018 14:19:40 -0700

snapwebsites (1.5.132.1~xenial) xenial; urgency=high

  * SNAP-456: Fixed a few paths.
  * Removed duplicate installations (with install() and file().)
  * Removed a few tabs in files that are expected to only have spaces.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 14 Aug 2018 23:05:29 -0700

snapwebsites (1.5.132.0~xenial) xenial; urgency=high

  * SNAP-456: Moved the services to /usr/sbin.
  * Fixed the installation of the logger files.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 14 Aug 2018 19:36:24 -0700

snapwebsites (1.5.131.0~xenial) xenial; urgency=high

  * Restored the preset files so they are there as expected.
  * Implemented the "add-wants" command for static packages.
  * Removed the WantedBy=... from another 4 files & added a comment about why.
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 14 Aug 2018 13:08:53 -0700

snapwebsites (1.5.130.0~xenial) xenial; urgency=high

  * Trying with the [Install] WantedBy=... commented out (snapimages).
  * Added a comment showing what gets generated by DEBHELPER
  * Added a validation of the snaplog-processes.xml file.
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 14 Aug 2018 10:48:34 -0700

snapwebsites (1.5.129.0~xenial) xenial; urgency=high

  * Trying again with a single preset file with the package name.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 14 Aug 2018 02:59:06 -0700

snapwebsites (1.5.128.0~xenial) xenial; urgency=high

  * Added the list of Postfix processes to watch.
  * Added clamav-freshclam daemon to watch when the server is active.
  * Added cron as a daemon to watch the default list of processes.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 14 Aug 2018 02:59:06 -0700

snapwebsites (1.5.127.0~xenial) xenial; urgency=high

  * Removed the postinst for loop that would manually disable the services.
  * Removing the preinst since we can use the preset instead. Although it
    looks like it worked, I have to test again with the new scripts.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 14 Aug 2018 01:51:36 -0700

snapwebsites (1.5.126.1~xenial) xenial; urgency=high

  * Took a closer look to the documentation, the preset files are expected
    to be named after the unit name, not the package.
  * Fixed the installation too, it has to be manual and include a priority.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 13 Aug 2018 23:59:58 -0700

snapwebsites (1.5.126.0~xenial) xenial; urgency=high

  * Added a .preset file (to see whether that works in the packager.)
  * Fixed the count of watchdog scripts in the XSL file.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 13 Aug 2018 21:02:18 -0700

snapwebsites (1.5.125.0~xenial) xenial; urgency=high

  * Added two new command line options to the snap.cgi tool.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 13 Aug 2018 18:30:48 -0700

snapwebsites (1.5.124.0~xenial) xenial; urgency=high

  * Applied a fix to the snapwatchdog installation so a scripts folder
    always exists when installing this package.
  * Enhanced the snapinstallwebsite help screen so we see that by default
    the "domains" and "websites" entries get created if not yet present.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 13 Aug 2018 05:00:14 -0700

snapwebsites (1.5.123.1~xenial) xenial; urgency=high

  * Fixed the set_max_stale() with a value.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 13 Aug 2018 05:00:14 -0700

snapwebsites (1.5.123.0~xenial) xenial; urgency=high

  * SNAP-199: Added support for caches in snap.cgi.
  * To get the new cache to work properly, added a hack, see SNAP-650.
  * Possibly fixed a security issue in the die() funtion, it now calls the
    set_no_cache(true) to make sure that error pages don't get cached.
  * Fixed a bug with last_modified, if both are -1, we do not want a 304.
  * Added the ETag for CSS/JS files.
  * Mark the CSS/JS file as immutable which means avoiding many hits.
  * Changed the update_...()  functions in the cache to use minimum().
  * Added two cache directories so snap.cgi can save caheable files there.
  * Fixed HTTP Weighted Strings to support values and quoted strings.
  * Fixed the libdbproxy so snapcreatetables stops crashing creating tables.
  * Added the model name in the comment so looking at table descriptions gives
    us that info for when the table was created.
  * SNAP-442: Added a DESCRIBE CLUSTER ANEW so we can force a reload of the
    cluster meta data from the Cassandra cluster.
  * SNAP-399: Added support for Cache-Tag-like headers along cache_control.
  * Finally found the bug in the BIO class, when r == 0 we could end up
    returning -1 instead of 0. It's now returning 0 as expected.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 11 Aug 2018 16:34:29 -0700

snapwebsites (1.5.122.0~xenial) xenial; urgency=high

  * SNAP-546: Added a way to set up the name of a child process.
  * Set the name of snap_child and process children.

 -- Alexis Wilke <alexis@m2osw.com>  Fri, 10 Aug 2018 04:02:59 -0700

snapwebsites (1.5.121.0~xenial) xenial; urgency=high

  * Fixed the loop over the dispatch match (it still used the f_match_count.)

 -- Alexis Wilke <alexis@m2osw.com>  Fri, 10 Aug 2018 02:58:24 -0700

snapwebsites (1.5.120.0~xenial) xenial; urgency=high

  * Added a delete on a bundle file so they get reloaded from the remote server.

 -- Alexis Wilke <alexis@m2osw.com>  Thu,  9 Aug 2018 23:18:13 -0700

snapwebsites (1.5.119.0~xenial) xenial; urgency=high

  * SNAP-648 -- Remove the backends=... from snapserver.conf on a purge of
    snapbackend.
  * Transformed the snapwatchdog server message dispatcher from a set of
    if() statements to a snap dispatcher used on itself and the messenger.
  * Removed a few logs that I used for debug purposes and inadvertendly
    checked in.
  * Removed the `systemctl stop <snapbackend service>` from the postrm:
    (1) it's automatically done in the prerm and (2) it would be too late,
    it has to be done in prerm.
  * Changed the try_dispatching_message() in a dispatch_message() since we
    can call process_message() from within it and save on many dual calls.
  * Handle the default snap communicator messages within the snap_communicator
    library object (HELP, LOG, QUITTING, READY, STOP, UNKNOWN)
  * Created a get_commands() to have an automatic "HELP" implementation.

 -- Alexis Wilke <alexis@m2osw.com>  Thu,  9 Aug 2018 20:00:57 -0700

snapwebsites (1.5.118.0~xenial) xenial; urgency=high

  * Protected some rmdir in postinst scripts or they could fail.
  * Added a preinst to mask snapbackends so they don't start automatically.
  * Fixing the README.Debian worked, we can have them by prepending the package
    name (just like for most of the other files.)

 -- Alexis Wilke <alexis@m2osw.com>  Thu,  9 Aug 2018 13:54:24 -0700

snapwebsites (1.5.117.0~xenial) xenial; urgency=high

  * Removing the */INSTALL.txt files, they were nearly all the same and they
    don't get installed, also we have a top INSTALL.txt.

 -- Alexis Wilke <alexis@m2osw.com>  Thu,  9 Aug 2018 00:33:23 -0700

snapwebsites (1.5.116.1~xenial) xenial; urgency=high

  * Removed the other .service duplicate (the ones under debian/... which
    do not get auto-installed because they don't have a one to one name to
    a package.)

 -- Alexis Wilke <alexis@m2osw.com>  Wed,  8 Aug 2018 22:36:05 -0700

snapwebsites (1.5.116.0~xenial) xenial; urgency=high

  * Fixed the dropCell(), for the branch table we have to use the branch key.
  * Fixed the disable of services, snapbackend needs the ".timer" to be
    disabled (need testing to make sure the backend doesn't run permanently.)
  * Removed duplicated .service files from snapbackend and snapfirewall.

 -- Alexis Wilke <alexis@m2osw.com>  Wed,  8 Aug 2018 21:59:39 -0700

snapwebsites (1.5.115.0~xenial) xenial; urgency=high

  * snapwatchdog.install would put the log-definitions in the wrong place.
  * Fixed the default path to log-definitions in the code.
  * Allow for an empty list of log-definitions, just in case.

 -- Alexis Wilke <alexis@m2osw.com>  Wed,  8 Aug 2018 19:58:41 -0700

snapwebsites (1.5.114.0~xenial) xenial; urgency=high

  * Added another try/catch to clean a list. A link could have been created
    between a page and the list-type taxonomy type, that link was not being
    cleaned up automatically.
  * Fixed various bundle descriptions.
  * Fixed the mkdir of the /etc/rkhunter.d to use -p in case it already exists.

 -- Alexis Wilke <alexis@m2osw.com>  Wed,  8 Aug 2018 18:20:22 -0700

snapwebsites (1.5.113.0~xenial) xenial; urgency=high

  * Added capability to edit various core::... 

 -- Alexis Wilke <alexis@m2osw.com>  Wed,  8 Aug 2018 00:53:07 -0700

snapwebsites (1.5.112.0~xenial) xenial; urgency=high

  * Change 301's so caching is turned ON (so browsers don't have to hit
    the server over and over again on those.)
  * Changed the 301 to a 302 when a page was moved less than 24h ago.
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Tue,  7 Aug 2018 21:33:33 -0700

snapwebsites (1.5.111.0~xenial) xenial; urgency=high

  * Set the type of core::site_secure flag to int8.

 -- Alexis Wilke <alexis@m2osw.com>  Mon,  6 Aug 2018 17:48:54 -0700

snapwebsites (1.5.110.0~xenial) xenial; urgency=high

  * Added the core::site_secure flag. If 1, then the user cookie is made secure.
  * Regenerate the cookie key on a login to avoid session fixations.
  * Added a destroy_session() function to delete the old session.

 -- Alexis Wilke <alexis@m2osw.com>  Mon,  6 Aug 2018 02:49:19 -0700

snapwebsites (1.5.109.0~xenial) xenial; urgency=high

  * Fixed the multi-link destination cell name, we have to use "link_name".
  * Added a --quiet command line option to the start script.
  * Added a couple of write to ease debug of start script.

 -- Alexis Wilke <alexis@m2osw.com>  Fri,  3 Aug 2018 03:24:05 -0700

snapwebsites (1.5.108.0~xenial) xenial; urgency=high

  * Fixed the msgid and ipaddr types in the snaplog bundle.

 -- Alexis Wilke <alexis@m2osw.com>  Fri,  3 Aug 2018 03:24:05 -0700

snapwebsites (1.5.107.0~xenial) xenial; urgency=high

  * Added snapwatchdog as a recommended package when installing
    snapserver-core-plugins.
  * Fixed the label of the box used to select the list of backends to run on
    a system (it was a copy paste from the "all service enable/disable")
  * Removed the Reset & Save buttons from the backend services, there is
    nothing to edit or save now.

 -- Alexis Wilke <alexis@m2osw.com>  Thu,  2 Aug 2018 20:48:11 -0700

snapwebsites (1.5.106.0~xenial) xenial; urgency=high

  * Fixed the package in which the libsnapwatchdog_list.so goes.

 -- Alexis Wilke <alexis@m2osw.com>  Thu,  2 Aug 2018 16:54:59 -0700

snapwebsites (1.5.105.0~xenial) xenial; urgency=high

  * Added an auto-fix for the lists that are found to be broken (i.e. some
    destination pages do not exist because they were destroyed.)
  * Fixed the list_data_path in the server.conf file (I still had
    list_journal_path)
  * Added a new watchdog plugin to check out the list process.
  * Allow for the on_modified_content() to work in the list even if the
    branch is "broken" (i.e. the page was deleted.)
  * Added a grep -v to reduce the Install output when running mk.
  * Added an option to avoid the throw in glob_dir() when the output is empty.
  * Added a chownnm() for the journal file after creation.
  * Added a user_group entry to define the expected journal user/group names.
  * Fixed the snapwatchdog-data.xsl, some entries need value-of.
  * Added an entry to the snapwatchdog-data.xsl to support the list.
  * Fixed the get_list_of_available_plugins() to support any number of paths.

 -- Alexis Wilke <alexis@m2osw.com>  Wed,  1 Aug 2018 15:39:27 -0700

snapwebsites (1.5.104.0~xenial) xenial; urgency=high

  * Added new watchdog plugin named apt to report the status from apt-check.
  * Changed the way we list the default list of watchdog plugins using one
    string and dynamically showing the list.
  * Removed most references to snapinit which is not part of snap anymore.
  * Removed the run-server.sh which would start snapinit.
  * Tried a way to hide the install output in mk but it's too slow.
  * Fixed the snapbase monthly cron so we don't get errors on a dir. delete.
  * Finally removed the commented out start script. The random works.
  * Added code to allow for the start script to stop, still need testing.
  * Added a removal of PID files in the stop.
  * Fixed the snapbackend journal age use, the value can be tainted.
  * Handle exceptions in the destroy_page_impl() on a per link basis. Also
    read all the links once first, then delete children and remaining links.
  * Added the destination cell name to all link_info so when we detect a
    broken link (in the list for now) we can delete it.
  * Fixed a bug in the sendmail plugin, a name_t was not defined in the switch.
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 29 Jul 2018 23:23:32 -0700

snapwebsites (1.5.103.0~xenial) xenial; urgency=high

  * Finally found the problem with the permissions, for virtual pages, we
    were creating a cache of their permissions which referenced them instead
    of their parent page permissions. This was wrong.
  * Added the watchdog log plugin as a functional plugin.
  * Updated .conf/.xsl files, added .xml files to support the new log plugin.
  * Added "log" as one of the default plugins to run on all machines.
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 28 Jul 2018 23:17:31 -0700

snapwebsites (1.5.102.0~xenial) xenial; urgency=high

  * Actually the journal_list objects must be allocated because we can't have
    a pointer to that object from a vector without the huge risk of having
    that pointer invalidated at some point. It also fixes the done() and
    destructor problems and I successfully create a company!

 -- Alexis Wilke <alexis@m2osw.com>  Fri, 27 Jul 2018 22:35:33 -0700

snapwebsites (1.5.101.0~xenial) xenial; urgency=high

  * Removed the test in the journal_list() destructor, it can't work because
    the vector implies copies which means done() isn't called.

 -- Alexis Wilke <alexis@m2osw.com>  Fri, 27 Jul 2018 22:35:33 -0700

snapwebsites (1.5.100.0~xenial) xenial; urgency=high

  * Fixed the f_file and f_func whether we use the syslog() is used or not.
  * Test the string pointer for NULL in case we log char * or wchar_t *.
  * Log the URI when snap.cgi gets an I/O error to see when it happens.
  * Added a script to show how to unblock one IP in the firewall.
  * Created a document showing how the IP blocking works in snap.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 26 Jul 2018 23:42:30 -0700

snapwebsites (1.5.99.0~xenial) xenial; urgency=high

  * Made code -Weffc++ compatible.
  * In case of Qt dialogs/windows, I moved the #include "ui_*.h" file within
    the #pragma diagnostic so the derived class doesn't get us an error.
  * Removed the cell post ++ and -- because it returns itself and effective
    C++ says we should not have such. We're not using that feature anyway.
  * Added a copy and assignement operators to classes with a bare pointer.
  * Converted a struct + function in a lambda now that we have C++11.
  * Check for /var/mail/root emails, if present show a warning in the
    "test_mta" field (snapwatchdog plugin of snapmanager.cgi).

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 23 Jul 2018 04:25:37 -0700

snapwebsites (1.5.98.0~xenial) xenial; urgency=high

  * Applied other fix to snapbackup.cron.daily so all the log files get the
    correct user/group.
  * Fixed the part of the script which changes the permissions and compresses
    the backups and do that only if the file was created.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 23 Jul 2018 01:08:00 -0700

snapwebsites (1.5.97.0~xenial) xenial; urgency=high

  * Fixed the watchdog manager plugin linkage problem.
  * Renamed the snapmanager version as SNAPMANAGER_VERSION_... instead of
    SNAPMANAGERCGI_VERSION_... since the CGI is not specifically the main
    part of that project.
  * Moved the snapmanagerdaemon start mark earlier, before loading plugins.
  * Added a screenshot of the snapmanager interface for the docs.
  * Updated various documentations.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 22 Jul 2018 14:58:49 -0700

snapwebsites (1.5.96.0~xenial) xenial; urgency=high

  * Added a --verbose option to the mk script.
  * Moved the snapwatchdog-data.xsl source file to the manager plugin.
  * Made the watchdog data file output shown in the snapmanager.cgi screens.
  * Added a menu entry to reach that page.
  * Tweaked the snapmanagercgi.cpp so it can have plugins generate the page
    output and add menu items.
  * Actually fixed the select="menu/select", it was supposed to be named:
    select="menu/status" instead and we really only expect one.
  * Made the images use "/..." instead of no slash.
  * Fixed the tests order in manager_cgi::verify() so they happen.
  * Made snapmanager.cgi symbols available to `dl`.
  * Added a validation step for the snapwatchdog-data.xsl file.
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 21 Jul 2018 22:45:06 -0700

snapwebsites (1.5.95.0~xenial) xenial; urgency=high

  * Started writing an XSLT stylesheet to convert snapwatchdog data to HTML.
  * Fixed the XML files to include a header and stylesheet.
  * Added "0" to the error_count so the stoi() doesn't fail (although there
    files are there and yet it doesn't seem the read them)

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 19 Jul 2018 17:53:39 -0700

snapwebsites (1.5.94.0~xenial) xenial; urgency=high

  * Fixed the JS to remove old feedback messages, the while() was not working.
  * Fixed the tabs in the snapmanager, they look decent now and match their
    surrounding which makes it easier to see which is selected.
  * Made small adjustments to the code to get the correct classes to help with
    the CSS of the tabs and the tab panels.
  * Added a snapmanager.cgi widget (a link really) to view watchdog results
    (although the link destination doesn't work yet...)
  * Changed the snapwatchdog XML to include a valid header.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 19 Jul 2018 17:53:39 -0700

snapwebsites (1.5.93.0~xenial) xenial; urgency=high

  * Fixed the description of the Enable All widget.
  * Fixed the failing "upgrade_required" button once the upgrade was done.
  * Added a feedback window (for errors) to the Snap! Manager.
  * Updated my setup-daemon with the few JS/CSS files that I copy too.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 19 Jul 2018 16:38:44 -0700

snapwebsites (1.5.92.0~xenial) xenial; urgency=high

  * Added support so we can send a test email from the watchdog manager plugin.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 19 Jul 2018 03:40:44 -0700

snapwebsites (1.5.91.0~xenial) xenial; urgency=high

  * Added a mark on the backend services so snapwatchdog knows they are
    backends and it can manage them slightly differently.
  * Cleaned up the get_retry_from_content() of the snapmanagercgi and
    especially properly test a couple more potential errors.
  * Enhanced the processes check to avoid generating errors when the system
    backends were clearly disabled.
  * Removed some dead code in backend.cpp.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 18 Jul 2018 22:09:24 -0700

snapwebsites (1.5.90.0~xenial) xenial; urgency=high

  * Changed the use of the status_file with two variables in the snapserver.conf
    file instead (backend_status and backends).
  * Removed the backend service dropdown functionality, instead you have to use
    the "backends" parameter. If present there, then the backend is expected
    to be active whenever the all_services is ON.
  * Properly implemented the Restore Default button of backend and watchdog.
  * Removed a couple of TODO that are actually done now.
  * Removed BACKENDALLSERVICES and force people to do a "Save Everywhere".
  * Added the default Service::RestartSec value in the backend_services table.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 18 Jul 2018 17:51:51 -0700

snapwebsites (1.5.89.0~xenial) xenial; urgency=high

  * Fixed the firewall and snapserver managers so they use HIGHLIGHT instead
    of WARNING.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 18 Jul 2018 03:36:39 -0700

snapwebsites (1.5.88.0~xenial) xenial; urgency=high

  * Added another field found in /proc/meminfo on digitalocean.
  * Added the snapbackend daemons to a processes XML file.
  * Fixed an error message in the glob_dir() function.
  * Fixed the communicator manager plugin by testing whether the service
    file exists, if not avoid accessing it (it throws otherwise.)
  * Allow for the mandatory flag to work in duplicated process definitions
    in the snapwatchdog XML files.
  * Try creating the folders if message for the snapmanager.cgi session.
    (Reality is that it's unlikely to work because Apache won't have
    permissions butat least I have better error messages.)
  * When trying to create a new session, do 10 attempts max. and fail.
  * Removed the default from/admin. emails from snapwatchdog.
  * Changed the WARNING in a HIGHLIGHT when snapwatchdog is disabled.
  * Added snapmanager.cgi fields to manage snapwatchdog emails and plugins.
  * Added snaplock as a mandatory process in a couple of places instead of
    the default because it's not present on Cassandra nodes.
  * Added an error in case we detect snapcommunicator but can't connect to it.
  * Show an error message in the watchdog tab of snapmanager.cgi when no MTA
    is installed (since sending an email wouldn't do any good...)
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 16 Jul 2018 21:21:21 -0700

snapwebsites (1.5.87.0~xenial) xenial; urgency=high

  * Fixed the default path to the snapwatchdog processes.
  * Applied a fix so the color of the snapmanager.cgi tab text doesn't go white.
  * Highlight disabled backend, but don't mark them as a warning because in
    most cases a disabled backend is not a warning.
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 15 Jul 2018 22:14:31 -0700

snapwebsites (1.5.86.0~xenial) xenial; urgency=high

  * Added a daily cron along snapmta so we attempt to dequeue emails once a
    day (becausewe may send emails only very rarely so it could otherwise
    get stuck there for a very long time.)
  * Marked the snapmta as being in conflict with postfix as they both provide
    a tool named /usr/sbin/sendmail.
  * Added ntpd as a process that needs to be running.
  * Fixed the path to the *-processes.xml files in the .install files.
  * Removed the dependency on snapwatchdog from snapserver (it was a test.)
  * Removed the message from the snapserver CMakeLists.txt.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 15 Jul 2018 18:13:38 -0700

snapwebsites (1.5.85.0~xenial) xenial; urgency=high

  * Test build by changing the order of the add_subdirectory().
  * Added support for potential duplicate definition of processes in XML files.
  * Added mysqld as a process running along snaplistd and snaplog.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 15 Jul 2018 17:49:23 -0700

snapwebsites (1.5.84.3~xenial) xenial; urgency=high

  * Updated the error message in an attempt to find the problem.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 15 Jul 2018 17:20:06 -0700

snapwebsites (1.5.84.2~xenial) xenial; urgency=high

  * Try having snapwatchdog as a dependency of snapserver to see whether
    that resolves the XSD validation problem.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 15 Jul 2018 17:06:03 -0700

snapwebsites (1.5.84.1~xenial) xenial; urgency=high

  * Force XSD path so snapwatchdog compiles on launchpad.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 15 Jul 2018 16:48:45 -0700

snapwebsites (1.5.84.0~xenial) xenial; urgency=high

  * Made snapwatchdog capable of running its plugins and RUSAGE even without
    the Cassandra cluster (otherwise it would not be capable of cleanly
    reporting that Cassandra is down)
  * Added code to report errors found by the snapwatchdog plugins by sending
    an email to the site administrator_email user or email list.
  * Added a log rotate for the RUSAGE files since we use the PID for the name.
  * Added a cache folder for snapwatchdog CPU data.
  * Added support for a plugin introducer (i.e. the "watchdog_").
  * Made the firewall and cassandra plugins work in snapwatchdog.
  * Renamed all the snapwatchdog plugins so they start with "watchdog_".
  * Fixed the cassandra loop so it breaks as expected when we find the instance.
  * Moved the lib one directory down so the #include work as expected.
  * Added error handling to all snapwatchdog plugins.
  * Added a log rotation for the snapwatchdog-scripts-errors.log file.
  * Added resources to the snapwatchdog library to support an error to email
    XSTL 2.0 script.
  * Added support for marking processes as mandatory for the system.
  * Changed the list of processes from  the snapwatchdog.conf file to a list
    of XML files, just drop extra XML files and more processes get checked.
  * Replaced the watchdog_processes with watchdog_processes_path.
  * Added XML files to check for processes (snaplog, snapserver, snaplistd,
    and snapwatchdog for the expected defaults)
  * Installed those XML files with process definitions.
  * Added validation of the process XML files to the CMakeLists.txt.
  * Protected all the std::cout in snapbackup with a --verbose.
  * Force ownership of snapbackup.log to snapwebsites:snapwebsites.
  * Actually install the watch_snapbackup_old_cron_script file for developers.
  * Fixed watch_snapbackup_old_cron_script and watch_firewall_fail2ban_client
    to work with the new snapwatchdog.
  * In the confirmation of the drop command, it's not usable in a batch but
    now it won't just sit there.
  * Added a couple of exception and use those instead of std::...() ones.
  * Added the quoted_printable_encode_and_set_data() function to the email
    class so we don't have to duplicate that code over and over.
  * Added a mkdir_p() that take an std::string or char const *.
  * Added a mew configuration variable named `disk_ignore` to allow for regex
    to ignore partitions that are filled up.
  * Added a meminfo.cpp/h to the library to read the /proc/meminfo file.
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 12 Jul 2018 05:05:04 -0700

snapwebsites (1.5.82.0~xenial) xenial; urgency=high

  * One more attempt in the dark to resolve the menu item issue in XSL.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 12 Jul 2018 05:05:04 -0700

snapwebsites (1.5.81.0~xenial) xenial; urgency=high

  * Fixed the uninstalled that would not run "apt-get autoremove --purge".
  * Added the "--purge" whenever an "autoremove" command is sent.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 12 Jul 2018 00:15:44 -0700

snapwebsites (1.5.80.0~xenial) xenial; urgency=high

  * Fixed the CSS, the version can't be fixed & flexed.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 11 Jul 2018 22:29:28 -0700

snapwebsites (1.5.79.0~xenial) xenial; urgency=high

  * Fixed the versions, it needs the ${...} around the names.
  * Fixed the CSS for the header with display: flex.
  * Replaced the "." with "node()" in the XSLT file.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 11 Jul 2018 19:56:13 -0700

snapwebsites (1.5.78.0~xenial) xenial; urgency=high

  * Fixed the version of snapbounce, it was empty because it moved to
    become SNAPWEBSITES_VERSION_... (also corrected others with the same
    problem)
  * Fixed the XSL and CSS so the version appears properly in snapmanagercgi.
  * Fixed the CSS for the fixed header, no padding allowed.
  * Removed my debug code generating a /tmp file from sendmail.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 11 Jul 2018 17:30:13 -0700

snapwebsites (1.5.77.2~xenial) xenial; urgency=high

  * Marked the debug write() result as not used.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 11 Jul 2018 01:49:36 -0700

snapwebsites (1.5.77.1~xenial) xenial; urgency=high

  * Bump version since the PPA did not kick start the previous attempt.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 11 Jul 2018 00:22:51 -0700

snapwebsites (1.5.77.0~xenial) xenial; urgency=high

  * Added a chown() against the /var/mail/root file to root:mail.
  * Added some debug to determine the sendmail parameters used.
  * Fixed snapmanager CGI menu, it was including the <item> tag.
  * Added the Snap! Website version to the snapmanager top bar.
  * Fixed the starting position of the data as the top bar went over.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 10 Jul 2018 23:50:14 -0700

snapwebsites (1.5.76.1~xenial) xenial; urgency=high

  * Bump version since the PPA did not kick start the previous attempt.

 -- Alexis Wilke <alexis@m2osw.com>  Sat,  7 Jul 2018 03:24:44 -0700

snapwebsites (1.5.76.0~xenial) xenial; urgency=high

  * Fixed the sendmail too, it seems to work 100% as expected.
  * Added a pretend msmtp script to simulate that tool and debug our sendmail.
  * Fixed the syslog logger identifier, the program PID is not there.

 -- Alexis Wilke <alexis@m2osw.com>  Sat,  7 Jul 2018 02:01:17 -0700

snapwebsites (1.5.75.2~xenial) xenial; urgency=high

  * Put the menu ID back so it gets attached as expected.

 -- Alexis Wilke <alexis@m2osw.com>  Fri,  6 Jul 2018 05:05:32 -0700

snapwebsites (1.5.75.1~xenial) xenial; urgency=high

  * Fixed the name from sendmail to snapmta in the rules.
  * Renamed the bundle the snapmta instead of sendmail.

 -- Alexis Wilke <alexis@m2osw.com>  Fri,  6 Jul 2018 01:05:48 -0700

snapwebsites (1.5.75.0~xenial) xenial; urgency=high

  * Change the name of the package to snapmta because there is a conflict
    with the snapsendmail backend package
  * Changed the snapmanager menu and globe to be fixed at the top.

 -- Alexis Wilke <alexis@m2osw.com>  Thu,  5 Jul 2018 22:30:31 -0700

snapwebsites (1.5.74.0~xenial) xenial; urgency=high

  * Also remove the very first line of the email (the From <...>).
  * Added a script in snapserver/scripts to check snapcommunicator connections.
  * Cleaned up the #include in the sendmail.cpp file.

 -- Alexis Wilke <alexis@m2osw.com>  Thu,  5 Jul 2018 20:00:40 -0700

snapwebsites (1.5.73.1~xenial) xenial; urgency=high

  * The file gets installed under debian/snapsendmail, not snapbounce.

 -- Alexis Wilke <alexis@m2osw.com>  Thu,  5 Jul 2018 04:44:57 -0700

snapwebsites (1.5.73.0~xenial) xenial; urgency=high

  * Check the return value of ftruncate() so it compiles in RELEASE.

 -- Alexis Wilke <alexis@m2osw.com>  Thu,  5 Jul 2018 03:55:35 -0700

snapwebsites (1.5.72.0~xenial) xenial; urgency=high

  * Changed the script to C++ so I can actually do a setuid(0).
  * The C++ code includes a way to use the /var/mail/root as a mail queue too.
  * Added a package since we have a binary to install: snapsendmail.
  * Added a rule for /usr/sbin/sendmail so we can do the setuid(0).
  * Fixed the exit value in snapbounce, it would always exit with 0.

 -- Alexis Wilke <alexis@m2osw.com>  Thu,  5 Jul 2018 02:32:32 -0700

snapwebsites (1.5.71.0~xenial) xenial; urgency=high

  * Fixed the sendmail script, the EOF needs two "<<" not just one.

 -- Alexis Wilke <alexis@m2osw.com>  Wed,  4 Jul 2018 14:24:02 -0700

snapwebsites (1.5.70.1~xenial) xenial; urgency=high

  * Removed an invalid parenthesis in the JavaScript.

 -- Alexis Wilke <alexis@m2osw.com>  Wed,  4 Jul 2018 04:46:25 -0700

snapwebsites (1.5.70.0~xenial) xenial; urgency=high

  * Fixed the popping of the GIF animation in the snapmanager HTML interface.

 -- Alexis Wilke <alexis@m2osw.com>  Wed,  4 Jul 2018 00:00:45 -0700

snapwebsites (1.5.69.0~xenial) xenial; urgency=high

  * Added bundle-sendmail.xml to install an SMTP tool (msmtp).
  * Install the bundle-snaplistd.xml bundle.
  * Changed the watchdog service field from an input string to a dropdown.

 -- Alexis Wilke <alexis@m2osw.com>  Tue,  3 Jul 2018 22:52:54 -0700

snapwebsites (1.5.68.0~xenial) xenial; urgency=high

  * Added a watchdog script to detect the old /etc/cron.daily/snapbackend file.
  * Adding a bundle to install msmtp and create a sendmail script.

 -- Alexis Wilke <alexis@m2osw.com>  Sun,  1 Jul 2018 23:12:24 -0700

snapwebsites (1.5.67.0~xenial) xenial; urgency=high

  * Moved the snapcommunicator neighbors.txt file to the lib folder instead
    of the cache (otherwise it gets deleted and we lose them for good!)
  * Added a get_data_path() function to clearly distinguish it from
    the get_list_data_path().
  * Added a help to the cass-stop script.

 -- Alexis Wilke <alexis@m2osw.com>  Sun,  1 Jul 2018 00:55:34 -0700

snapwebsites (1.5.66.0~xenial) xenial; urgency=high

  * Enhanced glob_dir to support std::string and char const *.
  * Made use of the raii_pointer_deleter to track the glob_t object.
  * Updated the manager.cpp and journal.cpp to the new version of glob_dir.
  * Documented glob_dir and journal_list.
  * Changed when the journal_list becomes "finished": which is now when
    the done() function is called (because once marked done we should
    never reuse that pointer!)

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 28 Jun 2018 18:51:42 -0700

snapwebsites (1.5.65.1~xenial) xenial; urgency=high

  * Fixed the use of the mkdir_p() function in file_content.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 28 Jun 2018 18:51:42 -0700

snapwebsites (1.5.65.0~xenial) xenial; urgency=high

  * Fixed the .../bundle-scripts/... path usage: it's part of the
    /var/cache/snapwebsites folder so it gets deleted once in a while,
    so (1) no need to create when installing and (2) need to create any
    time we need to use it (i.e. when we try run a script.)
  * Removed the mkdir from the snapmanagerdaemon post installation script.
  * Fixed the spelling (missing "s") in post removal script.
  * Added support to file_content() to auto-create path if required.
  * Updated the three places that access the bundle-scripts in C++ to auto-
    generate that folder if missing.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 28 Jun 2018 18:29:23 -0700

snapwebsites (1.5.64.0~xenial) xenial; urgency=high

  * Missed the /bin/ sub-folder.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 28 Jun 2018 03:11:39 -0700

snapwebsites (1.5.63.0~xenial) xenial; urgency=high

  * Restoring the path. It still did not make it in the output.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 28 Jun 2018 00:06:55 -0700

snapwebsites (1.5.62.0~xenial) xenial; urgency=high

  * Fixed the path to those files. They are in snapdb, not snapmanager.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 28 Jun 2018 00:06:55 -0700

snapwebsites (1.5.61.0~xenial) xenial; urgency=high

  * Fixed the debian/snapdb.install to get the two scripts installed.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 27 Jun 2018 23:47:20 -0700

snapwebsites (1.5.60.0~xenial) xenial; urgency=high

  * Added a snaplist.pref file to reduce the priority of our build packages.
  * Added some clean up to the snap_parser.h default variable values.
  * Trying to avoid the memory leak reports since we don't really need them.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 26 Jun 2018 18:21:27 -0700

snapwebsites (1.5.59.0~xenial) xenial; urgency=high

  * Fixed five invalid use of str.toUtf8().data(), which would end up
    using a temporary buffer after the corresponding object was deleted.
  * Enhanced error message in case execvpe() fails.
  * Fixed form line counting for "\r\n" (it was testing "\r\r" instead.)
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 26 Jun 2018 18:21:27 -0700

snapwebsites (1.5.58.0~xenial) xenial; urgency=high

  * Fixed the process implementation, a couple of functions where eventually
    used with a nullptr. I added a couple of tests to avoid the problem.
  * Made the == and != to nullptr functions official for faster compile of
    the RAII code.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 26 Jun 2018 00:11:01 -0700

snapwebsites (1.5.57.0~xenial) xenial; urgency=high

  * Well, a non-pointer just can't be dereferenced, so I fixed that class
    with an operator T () instead of the operator * ().
  * Fixed the UDP implementation accordingly.
  * Added a catch for the SIGABRT signal in hope of getting a stack trace.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 25 Jun 2018 16:55:57 -0700

snapwebsites (1.5.56.0~xenial) xenial; urgency=high

  * Okay, found out that the compiler optimizations would create a problem
    so I reimplemented the RAII class for us to move forward.
  * Added a UDP test to verify that RAII implementation.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 23 Jun 2018 14:40:37 -0700

snapwebsites (1.5.55.2~xenial) xenial; urgency=high

  * Added a few more traces to see whether fd == 0 is the problem.
  * Added a -p to my ./mk tool to dput packages.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 23 Jun 2018 14:40:37 -0700

snapwebsites (1.5.55.1~xenial) xenial; urgency=high

  * Added a couple of traces in an attempt to understand why the system
    says the socket is not valid.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 23 Jun 2018 02:27:37 -0700

snapwebsites (1.5.55.0~xenial) xenial; urgency=high

  * Enhanced the error when the UDP binding fails.

 -- Alexis Wilke <alexis@m2osw.com>  Fri, 22 Jun 2018 23:55:31 -0700

snapwebsites (1.5.54.0~xenial) xenial; urgency=high

  * Removed the libsnapwebsites-qt-doc package. At this time it's not
    necessary and the data will be in the libsnapwebsites-doc anyway.
  * Place the headers under /usr/include/snapwebsites_qt for the Qt version.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 20 Jun 2018 00:17:58 -0700

snapwebsites (1.5.53.0~xenial) xenial; urgency=high

  * Broke up the snap_communicator_qt implementation to avoid X11 in the main
    library (and all the tools under snapwebsites).

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 19 Jun 2018 22:45:04 -0700

snapwebsites (1.5.52.1~xenial) xenial; urgency=high

  * Kick a rebuild as launchpad did not properly detect the need.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 19 Jun 2018 15:00:41 -0700

snapwebsites (1.5.52.0~xenial) xenial; urgency=high

  * Added support for 'family' in the UDP server.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 18 Jun 2018 22:36:25 -0700

snapwebsites (1.5.51.0~xenial) xenial; urgency=high

  * Fixed the MTU size gathering by getting the interface name corresponding
    to the address used with that UDP port.

 -- Alexis Wilke <alexis@m2osw.com>  Sat,  9 Jun 2018 22:39:54 -0700

snapwebsites (1.5.50.0~xenial) xenial; urgency=high

  * Applied changes to support the new addr::iface class from libaddr.

 -- Alexis Wilke <alexis@m2osw.com>  Sat,  9 Jun 2018 01:19:34 -0700

snapwebsites (1.5.49.0~xenial) xenial; urgency=high

  * Added a matrix.h header and corresponding tests.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 12 Apr 2018 04:07:41 -0700

snapwebsites (1.5.48.0~xenial) xenial; urgency=high

  * Fixed the snap_qt_connection constructor, a test was inverted.
  * Fixed the f_fd declaration, it now gets set to -1 as expected.
  * Fixed the header so the QMap gets protected against -Wctor-dtor-privacy.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 20 Mar 2018 01:23:32 -0700

snapwebsites (1.5.47.0~xenial) xenial; urgency=high

  * Fix the snap_config so it uses exceptions instead of exit(1). That way
    we avoid problems with mutexes (i.e. they properly get unlocked.)
  * Various cleanups.

 -- Alexis Wilke <alexis@m2osw.com>  Sat,  3 Mar 2018 02:51:15 -0700

snapwebsites (1.5.46.0~xenial) xenial; urgency=high

  * Added the snap_qt_connection so we can use both, snap_communicator and
    Qt in the same binary.
  * Added qt5x11extras so we can retrieve the X11 file descriptor.

 -- Alexis Wilke <alexis@m2osw.com>  Sat,  3 Mar 2018 02:51:15 -0700

snapwebsites (1.5.45.0~xenial) xenial; urgency=high

  * Finished up the snapwatchdog plugin that runs shell script to test the
    health of the system.
  * Added support so we can capture stderr output from processes we start
    with our snap::process class.
  * Support two callbacks one for stdout and one for stderr.
  * Added a test in get_arg() so we throw if you never called get_args_size().
  * Fixed a bug in the fork() implementation, we had to use dup2() and not
    close() + dup() because race conditions can always happen.
  * Actually implemented the find_process tool used in the
    watch_firewall_fail2ban_client script.
  * Added a starter script so snapwatchdog scripts get kick started now
    giving us the /etc/default/snapwatchdog script for user settings.
  * Fixed the snapwatchdog server, we would add child process to the
    list of processes even if the fork() failed.
  * Applied a fix to the statvfs() call which can block if a device is
    over the network and is failing. It uses an alarm now.
  * Added a more detailed header so we know which computer is failing.
  * Various cleanups.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 11 Feb 2018 01:21:33 -0700

snapwebsites (1.5.44.0~xenial) xenial; urgency=high

  * Fixed the name of the script-files
  * Create the snapwatchdog-output sub-directory for the logs.
  * Fixed the paths to save the scripts output.
  * Added a the sub-directory to the logrotate of snapwatchdog.
  * Made the data path in the script a variable (WATCHDOG_WATCHSCRIPTS_OUTPUT).
  * Added the new watchscripts plugin to the list snapwatchdog plugins to run.
  * Added the log_subfolder, from_email, administrator_email variables.
  * Fixed the loop calling our scripts (the folders were still mixed up.)
  * Use sh to start our scripts since they won't be "755".
  * Fixed a bug in defining the `scripts_path`, the wrong variable was used.
  * Made sending the email dependent on the from/to emails availability.

 -- Alexis Wilke <alexis@m2osw.com>  Fri,  9 Feb 2018 01:09:45 -0700

snapwebsites (1.5.43.0~xenial) xenial; urgency=high

  * Extracted the email class from the sendmail plugin to the library.
  * Fixed the email serialization.
  * Implemented a unit test and functional test of the email class.
  * Added a new directory (mb) for functional tests that change the environment.
  * Updated plugins to use the new email class environment.
  * Added a flag to decide whether to output the brand info.
  * Added a note before the attachments.
  * Added support for snapwatchdog scripts to check for things like the
    fail2ban-client getting stuck once in a while and using 100% CPU time.
  * Fixed a ISP-8859-1 versus UTF-8 bug in glob_dir.cpp.
  * Fixed URL to snapwebsites, it uses https now.
  * Enhanced the snap_exception* implementation.
  * Various cleanups.

 -- Alexis Wilke <alexis@m2osw.com>  Thu,  8 Feb 2018 01:31:45 -0700

snapwebsites (1.5.42.0~xenial) xenial; urgency=high

  * Fixed limit to 200Mb instead of 200Tb.
  * Generally enhanced the README.md files.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 29 Jan 2018 00:12:40 -0700

snapwebsites (1.5.41.0~xenial) xenial; urgency=high

  * Added limits so fast_buffer won't allocate a buffer any larger than 200Mb.
  * Properly initialize the f_ncurses_stdout/stderr
  * Initialize the f_last_loadavg properly.
  * try/catch various exceptions in destructors.
  * Moved the logger initialization of snapmessage inside the try/catch.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 28 Jan 2018 03:45:41 -0700

snapwebsites (1.5.40.1~xenial) xenial; urgency=high

  * Fixed one file about a copyright.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 27 Jan 2018 19:55:33 -0700

snapwebsites (1.5.40.0~xenial) xenial; urgency=high

  * Fixed the process_quit() to properly kill the f_connection in snapmessage.
  * Added some color, it's not perfect but will help me.

 -- Alexis Wilke <alexis@m2osw.com>  Fri, 26 Jan 2018 01:34:22 -0700

snapwebsites (1.5.39.0~xenial) xenial; urgency=high

  * Enhanced the console in various ways.
  * Fixed closing the console, it now calls endwin() in the right place.
  * Fixed some old comments in snap_communicator so they match current status.
  * Moved the restore_fd() calls to the close_ncurse() because it has to be
    done at the right location (i.e. after the delscreen().)
  * Applied a fix to the console so the pointer appears at the correct
    location after output() was called.
  * Use a weak pointer in one location that would lock up the snap_console.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 22 Jan 2018 02:25:10 -0700

snapwebsites (1.5.38.0~xenial) xenial; urgency=high

  * Enhanced some error messages for invalid calls to get_parameters() so
    we know which command and parameter generated the error.
  * Added a close() function on the snap_fd_connection.
  * Added a mark_close() function so we can let snap_fd_connection know.
  * Also check get_socket() in is_writer()/is_reader() if closed that's not
    a writer or a reader.
  * Added a set of read/write function to the snap_fd_connection.
  * Added the Snap FD Buffer Connection which reads lines of data coming in
    the fd and sends them through the process_line() callback.
  * Enhanced the console implementation to redirect the stdout and stderr
    to the output area instead of anywhere on the screen.
  * Added a process_help() callback so when F1 is pressed, it gets called.
  * Added an implementation of process_quit() to restore the FD as required
    (i.e. stdout and stderr).
  * Started on a message dialog to help create messages.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 22 Jan 2018 02:25:10 -0700

snapwebsites (1.5.37.0~xenial) xenial; urgency=high

  * Added libncurse and libreadline as Source dependencies.
  * Moved the snapcommunicator dispatcher in its own file so it can use the
    logger (they currently inter include each others...)
  * process_message() is now defined in a separate class so we can have a
    default that throws if called. Useful if your dispatcher has a last entry
    which is a catch-all.
  * Added an always_match() function for the dispatcher catch-all entry.
  * Added a "reply with UNKNOWN" function.
  * Made all the send_message() functions return true or false.
  * Added logging in the snapmessage tool since we don't always get all the
    messages on screen (especially on a crash/quit situation.)
  * Various clean ups.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 18 Jan 2018 22:27:39 -0700

snapwebsites (1.5.36.0~xenial) xenial; urgency=high

  * Added the snap_console objects and the snapmessage tool.
  * Added libncurses and libreadline as dependencies.
  * Added a snap_fd_connection to snap_communicator.
  * Removed an unused flag in snap_communicator.
  * From my first commit, I redesigned snapmessage to use snap_console.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 17 Jan 2018 00:29:11 -0700

snapwebsites (1.5.35.0~xenial) xenial; urgency=high

  * Added the libreadline-dev as a build dependency.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 15 Jan 2018 04:13:01 -0700

snapwebsites (1.5.34.0~xenial) xenial; urgency=high

  * Added Doug's script to stop Cassandra. It's working way better than just
    rebooting without first running that script.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 13 Jan 2018 22:48:01 -0700

snapwebsites (1.5.33.0~xenial) xenial; urgency=high

  * Added the snapmessage command line tool to test messaging between
    services from the command line (could use scripts, probably).
  * Allow for add_connection() to be called with a null pointer.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 13 Jan 2018 22:48:01 -0700

snapwebsites (1.5.32.0~xenial) xenial; urgency=high

  * Moved the backend-status.txt file to /var/lib/... instead of the cache.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 13 Jan 2018 22:48:01 -0700

snapwebsites (1.5.31.0~xenial) xenial; urgency=high

  * Added the dispatcher template and sub-class.
  * Removed the process_message() from the 
    `snap_tcp_blocking_client_message_connection` class, it's not required
    since we have on in the `snap_tcp_client_message_connection`

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 11 Jan 2018 08:58:17 -0700

snapwebsites (1.5.30.0~xenial) xenial; urgency=high

  * Fixed the path to the snapwebsites.org, it's HTTPS now.
  * Enhanced the --save-cell description in snapdb.
  * Use the pointer_t for advgetopt in snapdb.h instead of redefining it.
  * Added a parameter to the form error log for easier debugging.
  * Removed the WARNING of the server manager about typing the wrong name
    since Doug added a drop down and thus you can't make such a mistake.
  * Fixed a few #include for advgetopt which should always have used the path.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 07 Dec 2017 01:43:17 -0700

snapwebsites (1.5.29.1~xenial) xenial; urgency=high

  * Fixed the e-store settings, only the store_name field would get saved.
  * In the Stripe implementation, if store_name is not defined, cleanly
    generate an error (we may want to do that much earlier, though.)

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 07 Dec 2017 01:43:17 -0700

snapwebsites (1.5.28.1~xenial) xenial; urgency=high

  * Fixed bug in libdbproxy, a contexts() call was not changed to getContexts()
  * Fixed the bug with consistency levels: the disconnect() resets it back to
    ONE and so if we want to use QUORUM it has to be set after. Note that
    QUORUM is currently forced because I missed that bug before! It is also
    safer with QUORUM always...
  * Applied various clean ups to the libdbproxy.
  * Updated the INSTALL file, although it should really be fixed 100%...
  * Fixed my start script since snapmanagerdaemon is now in .../snapmanager/.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 19 Nov 2017 16:31:56 -0700

snapwebsites (1.5.27.0~xenial) xenial; urgency=high

  * Fixed PPA build. Packaging was still installing the old libQtCassandra.

 -- Doug Barbieri <doug@dooglio.net>  Wed, 25 Oct 2017 17:01:11 -0700

snapwebsites (1.5.26.0~xenial) xenial; urgency=high

  * Fixed test websites: the canonical is not enough, we need to prevent
    search engines from indexing such sites by telling them NOINDEX.
  * Fixed reference to snapwebsites.org with HTTPS.
  * Fixed the tag name: X-Robots-Tag -- we were missing "-Tag".

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 13 Sep 2017 15:28:14 -0700

snapwebsites (1.5.25.0~xenial) xenial; urgency=high

  * SNAP-289: Fixed the list.cpp file handling, I put the file descriptor in
    a shared_ptr<>() object with a deletor that will always take care of that.
  * SNAP-289: Fixed the disabled_mode variable handling in backend.cpp.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 23 Aug 2017 20:45:30 -0700

snapwebsites (1.5.24.0~xenial) xenial; urgency=high

  * EX-194: Fixed the call to snapstop with the --service command line option.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 15 Aug 2017 19:19:33 -0700

snapwebsites (1.5.23.1~xenial) xenial; urgency=high

  * Removed the warning notice on backends since we now have a dropdown we
    cannot misspell the word.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 15 Aug 2017 13:48:40 -0700

snapwebsites (1.5.23.0~xenial) xenial; urgency=high

  * EX-191: Breadcrumb label may include HTML tags.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 14 Aug 2017 21:57:11 -0700

snapwebsites (1.5.22.0~xenial) xenial; urgency=high

  * SNAP-591: Existing links may need to be deleted before we create new ones.
  * Added a couple of tests to verify that this is done properly for unique
    links (we want to check the same with multiple links too at some point).

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 14 Aug 2017 21:57:06 -0700

snapwebsites (1.5.21.0~xenial) xenial; urgency=high

  * Noticed a warning from the filter and applied a fix (i.e. do not filter
    attributes of <xsl:...> tags because they include '[...]' specific to XSLT.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 13 Aug 2017 20:26:53 -0700

snapwebsites (1.5.20.0~xenial) xenial; urgency=high

  * EX-193: Added Reply-To header support.

 -- Doug Barbieri <doug@garibaldi>  Thu, 10 Aug 2017 09:04:52 -0700

snapwebsites (1.5.18.0~xenial) xenial; urgency=high

  * Fixed the help of the "snapclearcache".

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 03 Aug 2017 20:31:45 -0700

snapwebsites (1.5.17.0~xenial) xenial; urgency=high

  * Made the clear-cache.sh script a command line utility: "snapclearcache".

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 02 Aug 2017 14:22:40 -0700

snapwebsites (1.5.16.0~xenial) xenial; urgency=high

  * The fix to the root user permissions actually exposed another bug: the
    updating of the cache could end up using an empty version of the list
    of permissions when we shortcut the calculation of the permissions to
    know whether the user is allowed (i.e. the default list is the empty
    list and we would save that even if we did not call the function used
    to generate the list of permissions of a page.)

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 02 Aug 2017 13:54:07 -0700

snapwebsites (1.5.15.0~xenial) xenial; urgency=high

  * Fixed the root user permissions so the root can really access ALL pages
    as it was first intended.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 01 Aug 2017 20:31:10 -0700

snapwebsites (1.5.14.0~xenial) xenial; urgency=high

  * Added new API to content::path_info_t such that access to the database
    can be hidden and encapsulated.

 -- R. Douglas Barbieri <doug@dooglio.net>  Mon, 31 Jul 2017 22:20:27 -0700

snapwebsites (1.5.13.0~xenial) xenial; urgency=high

  * Added default for the snapbackup variables in case the default script
    does not (yet) include those values.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 27 Jul 2017 17:01:34 -0700

snapwebsites (1.5.12.0~xenial) xenial; urgency=high

  * Added INFO suffix in log for when snap_child finishes.
  * Also fixed snapbackend with regard to the manager plugin.

 -- R. Douglas Barbieri <doug@dooglio.net>  Wed, 26 Jul 2017 17:52:50 -0700

snapwebsites (1.5.11.0~xenial) xenial; urgency=high

  * Fixed the snapbackup CRON script, the date requires a backslash.

 -- Alexis Wilke <alexis@m2osw.com>  Mon, 24 Jul 2017 19:58:15 -0700

snapwebsites (1.5.10.1~xenial) xenial; urgency=high

  * Added "Save Everywhere" for ssh public keys (in ssh plugin).

 -- Doug Barbieri <doug@garibaldi>  Fri, 21 Jul 2017 14:01:46 -0700

snapwebsites (1.5.9.0~xenial) xenial; urgency=high

  * EX-79: Found out that if a page supports more than one image, then we must
    have a field name and not use "image" as that name. We may have a problem
    with the body which does not offer a separate field name for each image...

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 08 Jul 2017 17:14:51 -0700

snapwebsites (1.5.8.0~xenial) xenial; urgency=high

  * Fixed an error in snapfirewall where the manager plugin was not being
    installed, and where the fail2ban action file was being put into the wrong
    directory.
  * Updated some manager-plugins to use the new `widget_select` for drop
    downs.

 -- R. Douglas Barbieri <doug@dooglio.net>  Fri, 07 Jul 2017 11:38:24 -0700

snapwebsites (1.5.7.0~xenial) xenial; urgency=high

  * snapmanager: changed dbproxy and ssh to use switches.

 -- R. Douglas Barbieri <doug@dooglio.net>  Thu, 06 Jul 2017 14:23:18 -0700

snapwebsites (1.5.6.0~xenial) xenial; urgency=high

  * SNAP-222: Checking whether a file was properly added required to test
    with the correct path and not whether a file is attached to the field
    (because on Save we get a string, not the file which was already sent
    to use using AJAX.)

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 29 Jun 2017 11:49:42 -0700

snapwebsites (1.5.5.0~xenial) xenial; urgency=high

  * SNAP-574: Fixed the snapcgi.install so we get the HTML for maintenance and
    first install under /usr/share/snapwebsites/html.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 29 Jun 2017 11:49:42 -0700

snapwebsites (1.5.4.0~xenial) xenial; urgency=high

  * SNAP-584: Send all output to $BACKUP_LOG now.
  * Fixed the path, we were still using a hard coded path in two places.
  * Prevent the backup process if the mkdir fails.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 28 Jun 2017 14:36:42 -0700

snapwebsites (1.5.3.0~xenial) xenial; urgency=high

  * SNAP-584: Moved the rotation of /var/mail/root to snapbase.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 28 Jun 2017 11:56:59 -0700

snapwebsites (1.5.2.0~xenial) xenial; urgency=high

  * SNAP-579: Split snaplistd/snaplog into a new bundle: mysql. These bundles
    both rely on the mysql bundle to be installed. And both bundles will
    manage their respective users and tables, removing them when purged.

 -- R. Douglas Barbieri <doug@dooglio.net>  Wed, 28 Jun 2017 11:26:49 -0700

snapwebsites (1.5.1.5~xenial) xenial; urgency=high

  * SNAP-574: Removed all debian subfolders but kept all of the changelogs.
  * Added "NUM_DAYS" to `/etc/default/snaplog` so the admin may tune the
    threshold for vacuuming.

 -- R. Douglas Barbieri <doug@dooglio.net>  Tue, 27 Jun 2017 14:26:51 -0700

snapwebsites (1.5.1.1~xenial) xenial; urgency=high

  * SNAP-547: Fixed issue with install spec for `libsnapwebsites-dev`. It no longer
    installs the plugin headers.
  * SNAP-547: Removed qtcassandra call in from cmake.

 -- R. Douglas Barbieri <doug@dooglio.net>  Mon, 26 Jun 2017 11:45:42 -0700

snapwebsites (1.5.0.3) xenial; urgency=high

  * SNAP-547: Initial release of packaging for the snapwebsites project, which brings in
    all packaging into one debian source package.
  * Bumping up to 1.5 so that way the older packing is sure to upgrade to
    this version.

 -- R. Douglas Barbieri <doug@dooglio.net>  Wed, 19 Jun 2017 09:18:44 -0800
