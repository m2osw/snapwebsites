#!/bin/sh -e
#

#DEBHELPERS#

. /usr/share/debconf/confmodule

if test -n "$DEBIAN_SCRIPT_DEBUG"
then
    set -v -x
    DEBIAN_SCRIPT_TRACE=1
fi
${DEBIAN_SCRIPT_TRACE:+ echo "#42#DEBUG# RUNNING $0 $*" 1>&2 }

# Initialize the database environment
#
db_version 2.0
db_capb
db_settitle snapmanagercgi/title


# Ask for the clients IP addresses (i.e. static IPs of administrators)
#
if test "$1" = "configure" -a ! -e "/etc/snapwebsites/snapwebsites.d/snapmanager.conf"
then
    db_input high snapmanagercgi/clients || true
    db_go
fi

# Ask for a username and password on first configuration
#
if test "$1" = "configure" -a ! -e "/etc/snapwebsites/passwords/snapmanagercgi.pwd"
then
    # Ask for the name of the first user
    #
    db_input high snapmanagercgi/user_name || true
    db_go

    # TODO: check "strength" of password?
    #
    while true
    do
        # Ask for the password of the first user
        #
        RET=""
        db_input high snapmanagercgi/user_password || true
        db_go

        db_get snapmanagercgi/user_password
        if test -z "$RET"
        then
            # on error, clear database, just in case
            #
            db_set snapmanagercgi/user_password ""
            db_set snapmanagercgi/user_password_again ""

            # Password cannot be empty, display error
            #
            db_fset snapmanagercgi/user_password_empty seen false
            db_input critical snapmanagercgi/user_password_empty

            db_go
        else
            # Password was not empty
            #
            USER_PW="$RET"

            # Ask password again to make sure it was not mistyped
            #
            db_input high snapmanagercgi/user_password_again || true
            db_go

            # Check whether the two password entries are the same
            #
            db_get snapmanagercgi/user_password_again
            if test "$RET" = "$USER_PW"
            then
                # Same entry, we are all good
                USER_PW=''
                break
            fi

            # on error, clear database, just in case
            #
            db_set snapmanagercgi/user_password ""
            db_set snapmanagercgi/user_password_again ""

            # The password did not match, display error
            #
            db_fset snapmanagercgi/user_password_mismatch seen false
            db_input critical snapmanagercgi/user_password_mismatch
            db_go
        fi

        # Make sure the forms appear again
        #
        db_fset snapmanagercgi/user_password seen false
        db_fset snapmanagercgi/user_password_again seen false
    done
fi

# vim: ts=4 sw=4 et
